/**
 * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π
 */

import { memoryManager } from './memoryManager'

interface MemoryOptimizerOptions {
  enableGarbageCollection?: boolean
  enableProcessOptimization?: boolean
  enableImageOptimization?: boolean
  debug?: boolean
}

class MemoryOptimizer {
  private options: Required<MemoryOptimizerOptions>
  private isOptimizing = false
  private lastOptimization = 0
  private optimizationCooldown = 30000 // 30 seconds

  constructor(options: MemoryOptimizerOptions = {}) {
    this.options = {
      enableGarbageCollection: options.enableGarbageCollection ?? true,
      enableProcessOptimization: options.enableProcessOptimization ?? true,
      enableImageOptimization: options.enableImageOptimization ?? true,
      debug: options.debug ?? false,
    }

    this.setupMemoryOptimization()
  }

  private setupMemoryOptimization(): void {
    if (typeof process === 'undefined') return

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
    memoryManager.on('critical', (stats) => {
      this.performCriticalOptimization(stats)
    })

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
    memoryManager.on('high', (stats) => {
      this.performHighMemoryOptimization(stats)
    })

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è—Ö –æ –ø–∞–º—è—Ç–∏
    if (process.listenerCount('warning') === 0) {
      process.on('warning', (warning) => {
        if (warning.name === 'MaxListenersExceededWarning' || 
            warning.message.includes('memory')) {
          this.performEmergencyOptimization()
        }
      })
    }
  }

  /**
   * –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–∏ –ø–∞–º—è—Ç–∏
   */
  private async performCriticalOptimization(stats: any): Promise<void> {
    if (this.isOptimizing || Date.now() - this.lastOptimization < this.optimizationCooldown) {
      return
    }

    this.isOptimizing = true
    this.lastOptimization = Date.now()

    try {
      if (this.options.debug) {
        console.log(`üö® Critical memory optimization started: ${Math.round(stats.usage * 100)}%`)
      }

      // 1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π
      memoryManager.clearAllCaches()

      // 2. –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Node.js
      this.clearNodeGlobals()

      // 3. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
      if (this.options.enableGarbageCollection && global.gc) {
        global.gc()
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
        setTimeout(() => {
          if (global.gc) global.gc()
        }, 1000)
      }

      // 4. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
      if (this.options.enableProcessOptimization) {
        this.optimizeProcess()
      }

      if (this.options.debug) {
        const newStats = process.memoryUsage()
        const newUsage = newStats.heapUsed / newStats.heapTotal
        console.log(`‚úÖ Critical optimization completed: ${Math.round(newUsage * 100)}%`)
      }
    } catch (error) {
      console.error('Error during critical memory optimization:', error)
    } finally {
      this.isOptimizing = false
    }
  }

  /**
   * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–∏ –ø–∞–º—è—Ç–∏
   */
  private async performHighMemoryOptimization(stats: any): Promise<void> {
    if (this.isOptimizing) return

    try {
      if (this.options.debug) {
        console.log(`‚ö†Ô∏è High memory optimization: ${Math.round(stats.usage * 100)}%`)
      }

      // –ß–∞—Å—Ç–∏—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π
      memoryManager.partialCleanup(0.6) // –£–¥–∞–ª—è–µ–º 60% –∫—ç—à–∞

      // –ú—è–≥–∫–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
      if (this.options.enableGarbageCollection && global.gc) {
        setTimeout(() => {
          if (global.gc) global.gc()
        }, 500)
      }
    } catch (error) {
      console.error('Error during high memory optimization:', error)
    }
  }

  /**
   * –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
   */
  private async performEmergencyOptimization(): Promise<void> {
    try {
      if (this.options.debug) {
        console.log('üÜò Emergency memory optimization triggered')
      }

      // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
      this.clearAllPossibleResources()

      // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –º—É—Å–æ—Ä–∞
      if (this.options.enableGarbageCollection && global.gc) {
        for (let i = 0; i < 3; i++) {
          global.gc()
          await new Promise(resolve => setTimeout(resolve, 100))
        }
      }
    } catch (error) {
      console.error('Error during emergency optimization:', error)
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Node.js
   */
  private clearNodeGlobals(): void {
    try {
      // –û—á–∏—Å—Ç–∫–∞ require cache –¥–ª—è –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –º–æ–¥—É–ª–µ–π
      const moduleIds = Object.keys(require.cache)
      const coreModules = ['fs', 'path', 'http', 'https', 'crypto', 'util']
      
      moduleIds.forEach(id => {
        // –ù–µ —É–¥–∞–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏ –º–æ–¥—É–ª–∏ –∏–∑ node_modules
        if (!coreModules.some(core => id.includes(core)) && 
            !id.includes('node_modules') && 
            !id.includes('payload') &&
            !id.includes('next')) {
          try {
            delete require.cache[id]
          } catch (e) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
          }
        }
      })

      // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤
      if (typeof process !== 'undefined' && process._getActiveHandles) {
        const handles = process._getActiveHandles()
        handles.forEach(handle => {
          if (handle && typeof handle.unref === 'function') {
            handle.unref()
          }
        })
      }
    } catch (error) {
      if (this.options.debug) {
        console.warn('Error clearing Node globals:', error)
      }
    }
  }

  /**
   * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
   */
  private optimizeProcess(): void {
    try {
      if (typeof process === 'undefined') return

      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –ø–∞–º—è—Ç–∏
      if (process.setMaxListeners) {
        process.setMaxListeners(20) // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—à–∞—Ç–µ–ª–µ–π
      }

      // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è V8
      if (process.env.NODE_ENV === 'production') {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è V8
        if (typeof v8 !== 'undefined' && v8.setFlagsFromString) {
          v8.setFlagsFromString('--optimize-for-size')
        }
      }
    } catch (error) {
      if (this.options.debug) {
        console.warn('Error optimizing process:', error)
      }
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
   */
  private clearAllPossibleResources(): void {
    try {
      // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π
      memoryManager.clearAllCaches()

      // –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      this.clearNodeGlobals()

      // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–æ–≤
      if (typeof Buffer !== 'undefined' && Buffer.poolSize) {
        // –°–±—Ä–æ—Å –ø—É–ª–∞ –±—É—Ñ–µ—Ä–æ–≤
        Buffer.poolSize = 8192 // –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø—É–ª–∞
      }

      // –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ (–µ—Å–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
      if (typeof window !== 'undefined' && window.console && window.console.clear) {
        window.console.clear()
      }
    } catch (error) {
      if (this.options.debug) {
        console.warn('Error clearing resources:', error)
      }
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  getOptimizationStats(): {
    isOptimizing: boolean
    lastOptimization: number
    timeSinceLastOptimization: number
  } {
    return {
      isOptimizing: this.isOptimizing,
      lastOptimization: this.lastOptimization,
      timeSinceLastOptimization: Date.now() - this.lastOptimization,
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
   */
  async forceOptimization(): Promise<void> {
    const stats = memoryManager.getStats()
    if (stats) {
      await this.performCriticalOptimization(stats)
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä–∞
export const memoryOptimizer = new MemoryOptimizer({
  enableGarbageCollection: true,
  enableProcessOptimization: true,
  enableImageOptimization: true,
  debug: process.env.NODE_ENV === 'development'
})

export default memoryOptimizer

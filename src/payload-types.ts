/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    analytics: Analytics;
    authors: Author;
    'cart-sessions': CartSession;
    categories: Category;
    comments: Comment;
    discounts: Discount;
    events: Event;
    integrations: Integration;
    media: Media;
    'newsletter-subscribers': NewsletterSubscriber;
    orders: Order;
    'order-tracking': OrderTracking;
    pages: Page;
    posts: Post;
    'post-metrics': PostMetric;
    products: Product;
    productCategories: ProductCategory;
    promotions: Promotion;
    reviews: Review;
    solutions: Solution;
    tags: Tag;
    testimonials: Testimonial;
    users: User;
    'user-favorites': UserFavorite;
    'email-templates': EmailTemplate;
    'sender-emails': SenderEmail;
    'subscription-payments': SubscriptionPayment;
    subscriptions: Subscription;
    'subscription-plans': SubscriptionPlan;
    messages: Message;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    analytics: AnalyticsSelect<false> | AnalyticsSelect<true>;
    authors: AuthorsSelect<false> | AuthorsSelect<true>;
    'cart-sessions': CartSessionsSelect<false> | CartSessionsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    discounts: DiscountsSelect<false> | DiscountsSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    integrations: IntegrationsSelect<false> | IntegrationsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'newsletter-subscribers': NewsletterSubscribersSelect<false> | NewsletterSubscribersSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'order-tracking': OrderTrackingSelect<false> | OrderTrackingSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    'post-metrics': PostMetricsSelect<false> | PostMetricsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    productCategories: ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    promotions: PromotionsSelect<false> | PromotionsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    solutions: SolutionsSelect<false> | SolutionsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'user-favorites': UserFavoritesSelect<false> | UserFavoritesSelect<true>;
    'email-templates': EmailTemplatesSelect<false> | EmailTemplatesSelect<true>;
    'sender-emails': SenderEmailsSelect<false> | SenderEmailsSelect<true>;
    'subscription-payments': SubscriptionPaymentsSelect<false> | SubscriptionPaymentsSelect<true>;
    subscriptions: SubscriptionsSelect<false> | SubscriptionsSelect<true>;
    'subscription-plans': SubscriptionPlansSelect<false> | SubscriptionPlansSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    'email-settings': EmailSetting;
    'payment-providers': PaymentProvider;
    'notification-settings': NotificationSetting;
    'currency-settings': CurrencySetting;
    'exchange-rate-settings': ExchangeRateSetting;
    'webhook-settings': WebhookSetting;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'email-settings': EmailSettingsSelect<false> | EmailSettingsSelect<true>;
    'payment-providers': PaymentProvidersSelect<false> | PaymentProvidersSelect<true>;
    'notification-settings': NotificationSettingsSelect<false> | NotificationSettingsSelect<true>;
    'currency-settings': CurrencySettingsSelect<false> | CurrencySettingsSelect<true>;
    'exchange-rate-settings': ExchangeRateSettingsSelect<false> | ExchangeRateSettingsSelect<true>;
    'webhook-settings': WebhookSettingsSelect<false> | WebhookSettingsSelect<true>;
  };
  locale: 'en' | 'ru';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Product analytics and metrics
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "analytics".
 */
export interface Analytics {
  id: string;
  type: 'product_view' | 'purchase' | 'cart_add' | 'download';
  productId: string | Product;
  userId?: (string | null) | User;
  orderId?: (string | null) | Order;
  revenue?: number | null;
  /**
   * Additional event metadata
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  timestamp: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  title: string;
  /**
   * Select a product category
   */
  productCategory: string | ProductCategory;
  pricing: {
    /**
     * Base price in USD
     */
    basePrice: number;
    /**
     * Discount percentage (0-100)
     */
    discountPercentage?: number | null;
    /**
     * Final price after discount (calculated automatically)
     */
    finalPrice?: number | null;
    /**
     * Original price for comparison (optional)
     */
    compareAtPrice?: number | null;
    /**
     * Localized prices (automatically updated)
     */
    locales?: {
      en?: {
        amount?: number | null;
        currency?: string | null;
      };
      ru?: {
        amount?: number | null;
        currency?: string | null;
      };
    };
  };
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Brief description for product cards (max 160 characters)
   */
  shortDescription: string;
  features?:
    | {
        name: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Main product image (required)
   */
  thumbnail?: (string | null) | Media;
  gallery?:
    | {
        image: string | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Product type determines available features and delivery method
   */
  productType: 'digital' | 'subscription' | 'service' | 'access';
  /**
   * URL to download the digital product (only visible after purchase)
   */
  downloadLink?: string | null;
  /**
   * Subscription details
   */
  subscriptionDetails?: {
    /**
     * Recurring price for subscription (per billing interval)
     */
    recurringPrice: number;
    /**
     * How often to bill the customer
     */
    billingInterval: 'monthly' | 'quarterly' | 'annual';
    /**
     * Number of trial days (0 for no trial)
     */
    trialDays?: number | null;
  };
  /**
   * Define the features or areas this access product unlocks
   */
  accessDetails?: {
    features: ('premium_content' | 'advanced_features' | 'api_access' | 'priority_support')[];
    /**
     * Access validity in days (0 for unlimited)
     */
    validityPeriod: number;
  };
  /**
   * Show this product in featured section
   */
  isFeatured?: boolean | null;
  /**
   * Automatically set based on order volume (15% above average)
   */
  isPopular?: boolean | null;
  /**
   * Select related products to display
   */
  relatedProducts?: (string | Product)[] | null;
  status: 'draft' | 'published' | 'archived';
  publishedAt?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Categories specific to products.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories".
 */
export interface ProductCategory {
  id: string;
  title: string;
  description?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role: 'admin' | 'customer';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  orderNumber: string;
  customer: string | User;
  status: 'pending' | 'processing' | 'delivered' | 'cancelled';
  items: {
    product: string | Product;
    quantity: number;
    price: number;
    id?: string | null;
  }[];
  total: {
    en: {
      amount: number;
      currency: string;
    };
    ru: {
      amount: number;
      currency: string;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "authors".
 */
export interface Author {
  id: string;
  name: string;
  avatar?: (string | null) | Media;
  bio?: string | null;
  role?: string | null;
  company?: string | null;
  email?: string | null;
  website?: string | null;
  socialLinks?:
    | {
        platform: 'twitter' | 'linkedin' | 'github' | 'instagram' | 'facebook' | 'youtube' | 'other';
        url: string;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart-sessions".
 */
export interface CartSession {
  id: string;
  /**
   * User associated with this cart session
   */
  user?: (string | null) | User;
  /**
   * Unique session identifier for anonymous carts
   */
  sessionId: string;
  /**
   * Products in the cart
   */
  items?:
    | {
        product: string | Product;
        quantity: number;
        /**
         * Price at the time of adding to cart
         */
        price: number;
        id?: string | null;
      }[]
    | null;
  /**
   * Total number of items in cart
   */
  itemCount?: number | null;
  /**
   * Total price of all items in cart
   */
  total?: number | null;
  /**
   * Currency of the cart
   */
  currency?: string | null;
  /**
   * Whether a reminder email has been sent for this cart
   */
  reminderSent?: boolean | null;
  /**
   * When the reminder email was sent
   */
  reminderSentAt?: string | null;
  /**
   * Whether this cart has been converted to an order
   */
  convertedToOrder?: boolean | null;
  /**
   * The order this cart was converted to
   */
  convertedToOrderId?: (string | null) | Order;
  /**
   * When this cart session expires
   */
  expiresAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * General or Blog categories.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  /**
   * A brief description of this category
   */
  description?: string | null;
  /**
   * Fields specific to blog categories
   */
  blogCategoryDetails?: {
    /**
     * Show this category in the blog sidebar
     */
    showInSidebar?: boolean | null;
    /**
     * Hex color code for this category (e.g. #FF5500)
     */
    color?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: string;
  content: string;
  author: {
    name: string;
    email: string;
    /**
     * Optional website URL
     */
    website?: string | null;
  };
  post: string | Post;
  likes?: number | null;
  /**
   * Optional parent comment for replies
   */
  parentComment?: (string | null) | Comment;
  status: 'pending' | 'approved' | 'rejected';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  tags?: (string | Tag)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  title: string;
  description?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts".
 */
export interface Discount {
  id: string;
  /**
   * Promotional code (e.g. SUMMER2024)
   */
  code: string;
  type: 'percentage' | 'fixed' | 'shipping';
  /**
   * Discount amount (percentage or fixed amount)
   */
  value?: number | null;
  currency?: ('USD' | 'EUR' | 'RUB') | null;
  /**
   * Minimum order amount to apply discount
   */
  minOrderAmount?: number | null;
  /**
   * Maximum discount amount (optional)
   */
  maxDiscount?: number | null;
  startDate: string;
  endDate: string;
  /**
   * Maximum number of times this code can be used
   */
  maxUsage?: number | null;
  /**
   * Maximum times a single user can use this code
   */
  maxUsagePerUser?: number | null;
  usageCount?: number | null;
  status?: ('active' | 'inactive' | 'expired') | null;
  /**
   * Leave empty to apply to all products
   */
  applicableProducts?: (string | Product)[] | null;
  excludedProducts?: (string | Product)[] | null;
  /**
   * Leave empty to apply to all categories
   */
  applicableCategories?: (string | Category)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: string;
  type: string;
  data:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  timestamp: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrations".
 */
export interface Integration {
  id: string;
  name: string;
  description?: string | null;
  type: 'webhook' | 'email' | 'crm' | 'custom';
  status: 'active' | 'inactive';
  webhookUrl?: string | null;
  /**
   * API key for authentication
   */
  apiKey?: string | null;
  triggers: {
    event: 'order.created' | 'order.updated' | 'payment.received' | 'user.registered' | 'form.submitted';
    conditions?:
      | {
          field: string;
          operator: 'eq' | 'ne' | 'gt' | 'lt' | 'contains';
          value: string;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  actions: {
    type: 'http' | 'email';
    config?: {
      url?: string | null;
      method?: ('GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE') | null;
      headers?:
        | {
            [k: string]: unknown;
          }
        | unknown[]
        | string
        | number
        | boolean
        | null;
      body?:
        | {
            [k: string]: unknown;
          }
        | unknown[]
        | string
        | number
        | boolean
        | null;
      to?: string | null;
      from?: string | null;
      subject?: string | null;
      emailBody?: string | null;
    };
    id?: string | null;
  }[];
  lastSync?: string | null;
  lastSyncStatus?: ('success' | 'error') | null;
  lastError?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers".
 */
export interface NewsletterSubscriber {
  id: string;
  /**
   * Email адрес подписчика
   */
  email: string;
  /**
   * Имя подписчика (опционально)
   */
  name?: string | null;
  /**
   * Статус подписки
   */
  status?: ('active' | 'unsubscribed' | 'bounced') | null;
  /**
   * Уникальный токен для отписки
   */
  unsubscribeToken?: string | null;
  /**
   * Источник подписки (блог, главная страница и т.д.)
   */
  source?: string | null;
  /**
   * Предпочитаемый язык
   */
  locale?: ('ru' | 'en') | null;
  /**
   * Дата последней отправки рассылки
   */
  lastSent?: string | null;
  /**
   * Дополнительные данные о подписчике
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "order-tracking".
 */
export interface OrderTracking {
  id: string;
  orderId: string | Order;
  status:
    | 'placed'
    | 'payment_processing'
    | 'payment_confirmed'
    | 'ready_for_download'
    | 'completed'
    | 'cancelled'
    | 'refunded';
  downloadLinks?:
    | {
        productId: string | Product;
        link: string;
        expiresAt?: string | null;
        downloads?: number | null;
        maxDownloads?: number | null;
        id?: string | null;
      }[]
    | null;
  statusHistory?:
    | {
        status:
          | 'placed'
          | 'payment_processing'
          | 'payment_confirmed'
          | 'ready_for_download'
          | 'completed'
          | 'cancelled'
          | 'refunded';
        timestamp: string;
        note?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * When access to digital products expires
   */
  accessExpiresAt?: string | null;
  lastUpdated?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | {
        layout?: ('grid' | 'list') | null;
        postsPerPage?: number | null;
        showFeaturedPost?: boolean | null;
        showSearch?: boolean | null;
        showCategories?: boolean | null;
        showTags?: boolean | null;
        showPagination?: boolean | null;
        categoryID?: (string | null) | Category;
        tagID?: (string | null) | Tag;
        authorID?: (string | null) | User;
        id?: string | null;
        blockName?: string | null;
        blockType: 'blog';
      }
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  actions?:
    | {
        actionType: 'link' | 'button';
        label: string;
        type?: ('reference' | 'custom') | null;
        reference?:
          | ({
              relationTo: 'pages';
              value: string | Page;
            } | null)
          | ({
              relationTo: 'posts';
              value: string | Post;
            } | null);
        url?: string | null;
        appearance?: ('default' | 'primary' | 'secondary' | 'outline' | 'ghost') | null;
        newTab?: boolean | null;
        icon?: ('none' | 'arrow-right' | 'external-link' | 'download') | null;
        id?: string | null;
      }[]
    | null;
  style?: ('default' | 'centered' | 'split') | null;
  background?: ('none' | 'light' | 'dark' | 'primary') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableActions?: boolean | null;
        actions?:
          | {
              actionType: 'link' | 'button';
              label: string;
              type?: ('reference' | 'custom') | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              appearance?: ('default' | 'primary' | 'secondary' | 'outline' | 'ghost') | null;
              newTab?: boolean | null;
              icon?: ('none' | 'arrow-right' | 'external-link' | 'download') | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post-metrics".
 */
export interface PostMetric {
  id: string;
  /**
   * Automatically generated from post title
   */
  title: string;
  post: string | Post;
  views?: number | null;
  uniqueVisitors?: number | null;
  /**
   * Record of individual share events
   */
  shares?:
    | {
        platform: string;
        date: string;
        id?: string | null;
      }[]
    | null;
  shareCount?: number | null;
  likes?: number | null;
  /**
   * Reading progress tracking events
   */
  readingProgress?:
    | {
        progress: number;
        date: string;
        id?: string | null;
      }[]
    | null;
  completedReads?: number | null;
  lastUpdated?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage promotion codes and discounts
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promotions".
 */
export interface Promotion {
  id: string;
  /**
   * Promotion code (e.g., SUMMER2023)
   */
  code: string;
  type: 'percentage' | 'fixed' | 'buy_x_get_y';
  /**
   * Discount value (percentage or amount)
   */
  value: number;
  /**
   * Minimum purchase amount required
   */
  minPurchase?: number | null;
  /**
   * Maximum discount amount
   */
  maxDiscount?: number | null;
  startDate?: string | null;
  endDate?: string | null;
  /**
   * Maximum number of times this code can be used
   */
  usageLimit?: number | null;
  /**
   * Maximum times a single user can use this code
   */
  userLimit?: number | null;
  status: 'active' | 'inactive' | 'expired';
  usageCount?: number | null;
  /**
   * Specific products this promotion applies to (leave empty for all products)
   */
  products?: (string | Product)[] | null;
  /**
   * Specific categories this promotion applies to
   */
  categories?: (string | Category)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: string;
  clientName: string;
  companyName?: string | null;
  rating: number;
  reviewText: string;
  clientPhoto?: (string | null) | Media;
  project?: (string | null) | Solution;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solutions".
 */
export interface Solution {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage?: (string | null) | Media;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  toolsUsed?:
    | {
        tool?: string | null;
        id?: string | null;
      }[]
    | null;
  pricing: {
    basePrice: number;
    /**
     * Discount percentage (0-100)
     */
    discountPercentage?: number | null;
    finalPrice?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: string;
  author: string;
  authorTitle?: string | null;
  quote: string;
  avatar?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manages user favorite products.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-favorites".
 */
export interface UserFavorite {
  id: string;
  /**
   * The user these favorites belong to.
   */
  user: string | User;
  /**
   * List of favorite products for this user.
   */
  products?: (string | Product)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates".
 */
export interface EmailTemplate {
  id: string;
  name: string;
  /**
   * Уникальный идентификатор для использования в коде (например, "welcome-email").
   */
  slug: string;
  sender: string | SenderEmail;
  subject: string;
  /**
   * Используйте {{placeholder}} для вставки динамических данных.
   */
  body: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sender-emails".
 */
export interface SenderEmail {
  id: string;
  /**
   * Внутреннее название, например, "Поддержка" или "Без ответа".
   */
  name: string;
  /**
   * Имя, которое увидит получатель, например, "Flow Masters Support".
   */
  senderName: string;
  emailAddress: string;
  /**
   * Подпись, которая будет добавлена к письмам, отправленным с этого адреса.
   */
  signature?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-payments".
 */
export interface SubscriptionPayment {
  id: string;
  /**
   * Подписка
   */
  subscriptionId: string | Subscription;
  /**
   * Сумма платежа
   */
  amount: number;
  currency: 'RUB' | 'USD' | 'EUR';
  status: 'successful' | 'failed' | 'refunded' | 'pending';
  /**
   * Дата платежа
   */
  paymentDate: string;
  /**
   * Метод платежа
   */
  paymentMethod?: string | null;
  /**
   * ID транзакции в платежной системе
   */
  transactionId?: string | null;
  /**
   * Причина ошибки (если статус failed)
   */
  failureReason?: string | null;
  /**
   * Полный ответ от платежной системы
   */
  rawResponse?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: string;
  /**
   * ID пользователя
   */
  userId: string;
  /**
   * План подписки
   */
  planId: string | SubscriptionPlan;
  status: 'active' | 'paused' | 'canceled' | 'expired' | 'failed' | 'pending';
  paymentProvider: 'yoomoney' | 'robokassa' | 'stripe' | 'paypal';
  /**
   * Метод оплаты (например, card, wallet)
   */
  paymentMethod?: string | null;
  /**
   * Токен платежного метода для рекуррентных платежей
   */
  paymentToken?: string | null;
  period: 'daily' | 'weekly' | 'monthly' | 'quarterly' | 'annual';
  /**
   * Сумма платежа
   */
  amount: number;
  currency: 'RUB' | 'USD' | 'EUR';
  /**
   * Дата начала подписки
   */
  startDate: string;
  /**
   * Дата следующего платежа
   */
  nextPaymentDate: string;
  /**
   * Дата окончания подписки (если есть)
   */
  endDate?: string | null;
  /**
   * Дата отмены подписки (если отменена)
   */
  canceledAt?: string | null;
  /**
   * Дополнительные метаданные
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-plans".
 */
export interface SubscriptionPlan {
  id: string;
  /**
   * Name of the subscription plan
   */
  name: string;
  /**
   * Description of the subscription plan
   */
  description?: string | null;
  /**
   * List of features included in this plan
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Price of the subscription
   */
  price: number;
  currency: 'RUB' | 'USD' | 'EUR';
  /**
   * Billing period
   */
  period: 'daily' | 'weekly' | 'monthly' | 'quarterly' | 'annual';
  /**
   * Number of days in trial period (0 for no trial)
   */
  trialPeriodDays?: number | null;
  /**
   * Maximum number of months for subscription (0 for unlimited)
   */
  maxSubscriptionMonths?: number | null;
  /**
   * Whether the subscription auto-renews
   */
  autoRenew?: boolean | null;
  /**
   * Whether users can cancel the subscription
   */
  allowCancel?: boolean | null;
  /**
   * Whether this plan is active and available for purchase
   */
  isActive?: boolean | null;
  /**
   * Additional metadata for this plan
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Сообщения, отправленные через контактную форму или другие источники.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: string;
  name: string;
  email: string;
  subject: string;
  message: string;
  source?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'analytics';
        value: string | Analytics;
      } | null)
    | ({
        relationTo: 'authors';
        value: string | Author;
      } | null)
    | ({
        relationTo: 'cart-sessions';
        value: string | CartSession;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'comments';
        value: string | Comment;
      } | null)
    | ({
        relationTo: 'discounts';
        value: string | Discount;
      } | null)
    | ({
        relationTo: 'events';
        value: string | Event;
      } | null)
    | ({
        relationTo: 'integrations';
        value: string | Integration;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'newsletter-subscribers';
        value: string | NewsletterSubscriber;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'order-tracking';
        value: string | OrderTracking;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'post-metrics';
        value: string | PostMetric;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'productCategories';
        value: string | ProductCategory;
      } | null)
    | ({
        relationTo: 'promotions';
        value: string | Promotion;
      } | null)
    | ({
        relationTo: 'reviews';
        value: string | Review;
      } | null)
    | ({
        relationTo: 'solutions';
        value: string | Solution;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: string | Testimonial;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'user-favorites';
        value: string | UserFavorite;
      } | null)
    | ({
        relationTo: 'email-templates';
        value: string | EmailTemplate;
      } | null)
    | ({
        relationTo: 'sender-emails';
        value: string | SenderEmail;
      } | null)
    | ({
        relationTo: 'subscription-payments';
        value: string | SubscriptionPayment;
      } | null)
    | ({
        relationTo: 'subscriptions';
        value: string | Subscription;
      } | null)
    | ({
        relationTo: 'subscription-plans';
        value: string | SubscriptionPlan;
      } | null)
    | ({
        relationTo: 'messages';
        value: string | Message;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "analytics_select".
 */
export interface AnalyticsSelect<T extends boolean = true> {
  type?: T;
  productId?: T;
  userId?: T;
  orderId?: T;
  revenue?: T;
  metadata?: T;
  timestamp?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "authors_select".
 */
export interface AuthorsSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  bio?: T;
  role?: T;
  company?: T;
  email?: T;
  website?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart-sessions_select".
 */
export interface CartSessionsSelect<T extends boolean = true> {
  user?: T;
  sessionId?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        price?: T;
        id?: T;
      };
  itemCount?: T;
  total?: T;
  currency?: T;
  reminderSent?: T;
  reminderSentAt?: T;
  convertedToOrder?: T;
  convertedToOrderId?: T;
  expiresAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  blogCategoryDetails?:
    | T
    | {
        showInSidebar?: T;
        color?: T;
      };
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  content?: T;
  author?:
    | T
    | {
        name?: T;
        email?: T;
        website?: T;
      };
  post?: T;
  likes?: T;
  parentComment?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts_select".
 */
export interface DiscountsSelect<T extends boolean = true> {
  code?: T;
  type?: T;
  value?: T;
  currency?: T;
  minOrderAmount?: T;
  maxDiscount?: T;
  startDate?: T;
  endDate?: T;
  maxUsage?: T;
  maxUsagePerUser?: T;
  usageCount?: T;
  status?: T;
  applicableProducts?: T;
  excludedProducts?: T;
  applicableCategories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  type?: T;
  data?: T;
  timestamp?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrations_select".
 */
export interface IntegrationsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  type?: T;
  status?: T;
  webhookUrl?: T;
  apiKey?: T;
  triggers?:
    | T
    | {
        event?: T;
        conditions?:
          | T
          | {
              field?: T;
              operator?: T;
              value?: T;
              id?: T;
            };
        id?: T;
      };
  actions?:
    | T
    | {
        type?: T;
        config?:
          | T
          | {
              url?: T;
              method?: T;
              headers?: T;
              body?: T;
              to?: T;
              from?: T;
              subject?: T;
              emailBody?: T;
            };
        id?: T;
      };
  lastSync?: T;
  lastSyncStatus?: T;
  lastError?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscribers_select".
 */
export interface NewsletterSubscribersSelect<T extends boolean = true> {
  email?: T;
  name?: T;
  status?: T;
  unsubscribeToken?: T;
  source?: T;
  locale?: T;
  lastSent?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customer?: T;
  status?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        price?: T;
        id?: T;
      };
  total?:
    | T
    | {
        en?:
          | T
          | {
              amount?: T;
              currency?: T;
            };
        ru?:
          | T
          | {
              amount?: T;
              currency?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "order-tracking_select".
 */
export interface OrderTrackingSelect<T extends boolean = true> {
  orderId?: T;
  status?: T;
  downloadLinks?:
    | T
    | {
        productId?: T;
        link?: T;
        expiresAt?: T;
        downloads?: T;
        maxDownloads?: T;
        id?: T;
      };
  statusHistory?:
    | T
    | {
        status?: T;
        timestamp?: T;
        note?: T;
        id?: T;
      };
  accessExpiresAt?: T;
  lastUpdated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        blog?:
          | T
          | {
              layout?: T;
              postsPerPage?: T;
              showFeaturedPost?: T;
              showSearch?: T;
              showCategories?: T;
              showTags?: T;
              showPagination?: T;
              categoryID?: T;
              tagID?: T;
              authorID?: T;
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  actions?:
    | T
    | {
        actionType?: T;
        label?: T;
        type?: T;
        reference?: T;
        url?: T;
        appearance?: T;
        newTab?: T;
        icon?: T;
        id?: T;
      };
  style?: T;
  background?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableActions?: T;
        actions?:
          | T
          | {
              actionType?: T;
              label?: T;
              type?: T;
              reference?: T;
              url?: T;
              appearance?: T;
              newTab?: T;
              icon?: T;
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  tags?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post-metrics_select".
 */
export interface PostMetricsSelect<T extends boolean = true> {
  title?: T;
  post?: T;
  views?: T;
  uniqueVisitors?: T;
  shares?:
    | T
    | {
        platform?: T;
        date?: T;
        id?: T;
      };
  shareCount?: T;
  likes?: T;
  readingProgress?:
    | T
    | {
        progress?: T;
        date?: T;
        id?: T;
      };
  completedReads?: T;
  lastUpdated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  productCategory?: T;
  pricing?:
    | T
    | {
        basePrice?: T;
        discountPercentage?: T;
        finalPrice?: T;
        compareAtPrice?: T;
        locales?:
          | T
          | {
              en?:
                | T
                | {
                    amount?: T;
                    currency?: T;
                  };
              ru?:
                | T
                | {
                    amount?: T;
                    currency?: T;
                  };
            };
      };
  description?: T;
  shortDescription?: T;
  features?:
    | T
    | {
        name?: T;
        description?: T;
        id?: T;
      };
  thumbnail?: T;
  gallery?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  productType?: T;
  downloadLink?: T;
  subscriptionDetails?:
    | T
    | {
        recurringPrice?: T;
        billingInterval?: T;
        trialDays?: T;
      };
  accessDetails?:
    | T
    | {
        features?: T;
        validityPeriod?: T;
      };
  isFeatured?: T;
  isPopular?: T;
  relatedProducts?: T;
  status?: T;
  publishedAt?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promotions_select".
 */
export interface PromotionsSelect<T extends boolean = true> {
  code?: T;
  type?: T;
  value?: T;
  minPurchase?: T;
  maxDiscount?: T;
  startDate?: T;
  endDate?: T;
  usageLimit?: T;
  userLimit?: T;
  status?: T;
  usageCount?: T;
  products?: T;
  categories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  clientName?: T;
  companyName?: T;
  rating?: T;
  reviewText?: T;
  clientPhoto?: T;
  project?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solutions_select".
 */
export interface SolutionsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  featuredImage?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  toolsUsed?:
    | T
    | {
        tool?: T;
        id?: T;
      };
  pricing?:
    | T
    | {
        basePrice?: T;
        discountPercentage?: T;
        finalPrice?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  author?: T;
  authorTitle?: T;
  quote?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-favorites_select".
 */
export interface UserFavoritesSelect<T extends boolean = true> {
  user?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates_select".
 */
export interface EmailTemplatesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  sender?: T;
  subject?: T;
  body?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sender-emails_select".
 */
export interface SenderEmailsSelect<T extends boolean = true> {
  name?: T;
  senderName?: T;
  emailAddress?: T;
  signature?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-payments_select".
 */
export interface SubscriptionPaymentsSelect<T extends boolean = true> {
  subscriptionId?: T;
  amount?: T;
  currency?: T;
  status?: T;
  paymentDate?: T;
  paymentMethod?: T;
  transactionId?: T;
  failureReason?: T;
  rawResponse?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions_select".
 */
export interface SubscriptionsSelect<T extends boolean = true> {
  userId?: T;
  planId?: T;
  status?: T;
  paymentProvider?: T;
  paymentMethod?: T;
  paymentToken?: T;
  period?: T;
  amount?: T;
  currency?: T;
  startDate?: T;
  nextPaymentDate?: T;
  endDate?: T;
  canceledAt?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-plans_select".
 */
export interface SubscriptionPlansSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  price?: T;
  currency?: T;
  period?: T;
  trialPeriodDays?: T;
  maxSubscriptionMonths?: T;
  autoRenew?: T;
  allowCancel?: T;
  isActive?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  subject?: T;
  message?: T;
  source?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  mainNavItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  bottomNavItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings".
 */
export interface EmailSetting {
  id: string;
  smtpHost: string;
  smtpPort: number;
  smtpUser: string;
  smtpPassword: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-providers".
 */
export interface PaymentProvider {
  id: string;
  general: {
    orderCancellationTimeout: number;
  };
  yoomoney?: {
    yoomoney_enabled?: boolean | null;
    yoomoney_displayName?: {
      ru: string;
      en: string;
    };
    yoomoney_config?: {
      testMode?: boolean | null;
      test?: {
        shop_id: string;
        secret_key: string;
      };
      production?: {
        shop_id: string;
        secret_key: string;
      };
    };
  };
  stripe?: {
    stripe_enabled?: boolean | null;
    stripe_displayName?: {
      ru: string;
      en: string;
    };
    stripe_config?: {
      testMode?: boolean | null;
      test?: {
        publishable_key: string;
        secret_key: string;
      };
      production?: {
        publishable_key: string;
        secret_key: string;
      };
    };
  };
  robokassa?: {
    robokassa_enabled?: boolean | null;
    robokassa_displayName?: {
      ru: string;
      en: string;
    };
    robokassa_config?: {
      testMode?: boolean | null;
      test?: {
        merchant_login: string;
        password1: string;
        password2: string;
      };
      production?: {
        merchant_login: string;
        password1: string;
        password2: string;
      };
    };
  };
  paypal?: {
    paypal_enabled?: boolean | null;
    paypal_displayName?: {
      ru: string;
      en: string;
    };
    paypal_config?: {
      testMode?: boolean | null;
      test?: {
        client_id: string;
        client_secret: string;
      };
      production?: {
        client_id: string;
        client_secret: string;
      };
    };
  };
  crypto?: {
    crypto_enabled?: boolean | null;
    crypto_displayName?: {
      ru: string;
      en: string;
    };
    crypto_config?: {
      testMode?: boolean | null;
      test?: {
        api_key: string;
        webhook_secret: string;
        /**
         * Create a project ID at https://cloud.walletconnect.com/
         */
        wallet_connect_project_id: string;
        supported_currencies: string;
      };
      production?: {
        api_key: string;
        webhook_secret: string;
        /**
         * Create a project ID at https://cloud.walletconnect.com/
         */
        wallet_connect_project_id: string;
        supported_currencies: string;
      };
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notification-settings".
 */
export interface NotificationSetting {
  id: string;
  email: {
    sender: {
      senderName: {
        ru: string;
        en: string;
      };
      senderEmail: string;
    };
    /**
     * Email address where admin notifications will be sent
     */
    adminEmail: string;
    templates: {
      orderConfirmation: {
        enabled?: boolean | null;
        subject: {
          ru: string;
          en: string;
        };
        template: {
          ru: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          en: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
      };
      paymentConfirmation: {
        enabled?: boolean | null;
        subject: {
          ru: string;
          en: string;
        };
        template: {
          ru: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          en: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
      };
      orderShipped: {
        enabled?: boolean | null;
        subject: {
          ru: string;
          en: string;
        };
        template: {
          ru: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          en: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
      };
      downloadableProduct: {
        enabled?: boolean | null;
        subject: {
          ru: string;
          en: string;
        };
        template: {
          ru: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          en: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
        };
      };
    };
  };
  sms?: {
    enabled?: boolean | null;
    provider?: ('twilio' | 'nexmo' | 'custom') | null;
    providerConfig?: {
      accountSid?: string | null;
      authToken?: string | null;
      fromNumber: string;
      apiEndpoint?: string | null;
    };
    templates?: {
      orderConfirmation: {
        enabled?: boolean | null;
        message: {
          ru: string;
          en: string;
        };
      };
      paymentConfirmation: {
        enabled?: boolean | null;
        message: {
          ru: string;
          en: string;
        };
      };
    };
  };
  push?: {
    enabled?: boolean | null;
    firebaseConfig?: {
      apiKey: string;
      projectId: string;
      appId: string;
      messagingSenderId: string;
    };
    templates?: {
      orderStatusUpdate: {
        enabled?: boolean | null;
        title: {
          ru: string;
          en: string;
        };
        body: {
          ru: string;
          en: string;
        };
      };
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "currency-settings".
 */
export interface CurrencySetting {
  id: string;
  /**
   * Primary currency used for internal calculations
   */
  baseCurrency: 'RUB' | 'USD' | 'EUR' | 'GBP' | 'JPY' | 'CNY' | 'INR' | 'CAD' | 'AUD' | 'CHF';
  /**
   * Currencies available to customers on the frontend
   */
  supportedCurrencies: ('RUB' | 'USD' | 'EUR' | 'GBP' | 'JPY' | 'CNY' | 'INR' | 'CAD' | 'AUD' | 'CHF')[];
  displayFormat: {
    symbolPosition: 'before' | 'after';
    /**
     * Display currency code along with the symbol (e.g., $100 USD)
     */
    showCurrencyCode?: boolean | null;
    thousandsSeparator: ' ' | ',' | '.' | '';
    decimalSeparator: '.' | ',';
    decimalPlaces: '0' | '1' | '2';
  };
  /**
   * Override default currency for specific locales
   */
  localeDefaults?:
    | {
        locale: 'en' | 'ru';
        currency: 'RUB' | 'USD' | 'EUR' | 'GBP' | 'JPY' | 'CNY' | 'INR' | 'CAD' | 'AUD' | 'CHF';
        format?: {
          symbolPosition?: ('before' | 'after') | null;
          thousandsSeparator?: (' ' | ',' | '.' | '') | null;
          decimalSeparator?: ('.' | ',') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Rules for rounding prices in different ranges
   */
  roundingRules?:
    | {
        minPrice: number;
        maxPrice: number;
        /**
         * Round to nearest value (e.g., 5, 10, 99, etc.)
         */
        roundTo: number;
        strategy?: ('nearest' | 'down' | 'up') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add additional markup for specific currencies
   */
  markup?:
    | {
        currency: 'RUB' | 'USD' | 'EUR' | 'GBP' | 'JPY' | 'CNY' | 'INR' | 'CAD' | 'AUD' | 'CHF';
        /**
         * Additional percentage to add to exchange rate (can be negative for discounts)
         */
        percentage: number;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exchange-rate-settings".
 */
export interface ExchangeRateSetting {
  id: string;
  auto?: {
    enabled?: boolean | null;
    provider?: ('openexchangerates' | 'exchangerateapi' | 'fixer' | 'currencylayer') | null;
    apiKey?: string | null;
    updateFrequency?: ('hourly' | 'daily' | 'weekly') | null;
    /**
     * Timestamp of the last automatic update
     */
    lastUpdated?: string | null;
  };
  /**
   * Manual exchange rates (these will override automatic rates)
   */
  rates?:
    | {
        fromCurrency: 'RUB' | 'USD' | 'EUR' | 'GBP' | 'JPY' | 'CNY' | 'INR' | 'CAD' | 'AUD' | 'CHF';
        toCurrency: 'RUB' | 'USD' | 'EUR' | 'GBP' | 'JPY' | 'CNY' | 'INR' | 'CAD' | 'AUD' | 'CHF';
        /**
         * Rate to convert from the base currency to the target currency
         */
        rate: number;
        /**
         * Whether this rate should be preserved during automatic updates
         */
        manuallySet?: boolean | null;
        /**
         * Timestamp of the last update for this rate
         */
        lastUpdated?: string | null;
        id?: string | null;
      }[]
    | null;
  display?: {
    /**
     * Show the current exchange rate when user switches currency
     */
    showExchangeRate?: boolean | null;
    allowUserCurrencySwitch?: boolean | null;
    /**
     * Show price in both the user-selected currency and the base currency
     */
    showPriceInMultipleCurrencies?: boolean | null;
  };
  failover: {
    /**
     * Maximum age of rates before they are considered stale
     */
    maxRateAge: number;
    /**
     * Use manually set rates if automatic update fails
     */
    fallbackToManualRates?: boolean | null;
    disableCurrencySwitching?: boolean | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webhook-settings".
 */
export interface WebhookSetting {
  id: string;
  enabled?: boolean | null;
  securitySettings?: {
    /**
     * Secret used to sign webhooks for verification
     */
    signatureSecret?: string | null;
    enableIPWhitelist?: boolean | null;
    /**
     * List of allowed IP addresses
     */
    ipWhitelist?:
      | {
          ipAddress: string;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  retrySettings?: {
    maxRetries?: number | null;
    retryInterval?: ('fixed' | 'exponential') | null;
  };
  /**
   * Configure webhook endpoints and events
   */
  endpoints?:
    | {
        name: string;
        url: string;
        active?: boolean | null;
        events: (
          | 'order.created'
          | 'order.updated'
          | 'order.completed'
          | 'order.cancelled'
          | 'payment.received'
          | 'payment.failed'
          | 'product.created'
          | 'product.updated'
          | 'product.deleted'
          | 'user.created'
          | 'user.updated'
        )[];
        headers?:
          | {
              key: string;
              value: string;
              id?: string | null;
            }[]
          | null;
        lastSent?: string | null;
        status?: ('healthy' | 'warning' | 'error') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Recent webhook delivery logs
   */
  logs?:
    | {
        timestamp?: string | null;
        endpoint?: string | null;
        event?: string | null;
        status?: ('success' | 'failed' | 'retrying') | null;
        responseCode?: number | null;
        responseTime?: number | null;
        attemptNumber?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  mainNavItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  bottomNavItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings_select".
 */
export interface EmailSettingsSelect<T extends boolean = true> {
  smtpHost?: T;
  smtpPort?: T;
  smtpUser?: T;
  smtpPassword?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-providers_select".
 */
export interface PaymentProvidersSelect<T extends boolean = true> {
  general?:
    | T
    | {
        orderCancellationTimeout?: T;
      };
  yoomoney?:
    | T
    | {
        yoomoney_enabled?: T;
        yoomoney_displayName?:
          | T
          | {
              ru?: T;
              en?: T;
            };
        yoomoney_config?:
          | T
          | {
              testMode?: T;
              test?:
                | T
                | {
                    shop_id?: T;
                    secret_key?: T;
                  };
              production?:
                | T
                | {
                    shop_id?: T;
                    secret_key?: T;
                  };
            };
      };
  stripe?:
    | T
    | {
        stripe_enabled?: T;
        stripe_displayName?:
          | T
          | {
              ru?: T;
              en?: T;
            };
        stripe_config?:
          | T
          | {
              testMode?: T;
              test?:
                | T
                | {
                    publishable_key?: T;
                    secret_key?: T;
                  };
              production?:
                | T
                | {
                    publishable_key?: T;
                    secret_key?: T;
                  };
            };
      };
  robokassa?:
    | T
    | {
        robokassa_enabled?: T;
        robokassa_displayName?:
          | T
          | {
              ru?: T;
              en?: T;
            };
        robokassa_config?:
          | T
          | {
              testMode?: T;
              test?:
                | T
                | {
                    merchant_login?: T;
                    password1?: T;
                    password2?: T;
                  };
              production?:
                | T
                | {
                    merchant_login?: T;
                    password1?: T;
                    password2?: T;
                  };
            };
      };
  paypal?:
    | T
    | {
        paypal_enabled?: T;
        paypal_displayName?:
          | T
          | {
              ru?: T;
              en?: T;
            };
        paypal_config?:
          | T
          | {
              testMode?: T;
              test?:
                | T
                | {
                    client_id?: T;
                    client_secret?: T;
                  };
              production?:
                | T
                | {
                    client_id?: T;
                    client_secret?: T;
                  };
            };
      };
  crypto?:
    | T
    | {
        crypto_enabled?: T;
        crypto_displayName?:
          | T
          | {
              ru?: T;
              en?: T;
            };
        crypto_config?:
          | T
          | {
              testMode?: T;
              test?:
                | T
                | {
                    api_key?: T;
                    webhook_secret?: T;
                    wallet_connect_project_id?: T;
                    supported_currencies?: T;
                  };
              production?:
                | T
                | {
                    api_key?: T;
                    webhook_secret?: T;
                    wallet_connect_project_id?: T;
                    supported_currencies?: T;
                  };
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notification-settings_select".
 */
export interface NotificationSettingsSelect<T extends boolean = true> {
  email?:
    | T
    | {
        sender?:
          | T
          | {
              senderName?:
                | T
                | {
                    ru?: T;
                    en?: T;
                  };
              senderEmail?: T;
            };
        adminEmail?: T;
        templates?:
          | T
          | {
              orderConfirmation?:
                | T
                | {
                    enabled?: T;
                    subject?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                    template?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                  };
              paymentConfirmation?:
                | T
                | {
                    enabled?: T;
                    subject?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                    template?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                  };
              orderShipped?:
                | T
                | {
                    enabled?: T;
                    subject?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                    template?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                  };
              downloadableProduct?:
                | T
                | {
                    enabled?: T;
                    subject?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                    template?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                  };
            };
      };
  sms?:
    | T
    | {
        enabled?: T;
        provider?: T;
        providerConfig?:
          | T
          | {
              accountSid?: T;
              authToken?: T;
              fromNumber?: T;
              apiEndpoint?: T;
            };
        templates?:
          | T
          | {
              orderConfirmation?:
                | T
                | {
                    enabled?: T;
                    message?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                  };
              paymentConfirmation?:
                | T
                | {
                    enabled?: T;
                    message?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                  };
            };
      };
  push?:
    | T
    | {
        enabled?: T;
        firebaseConfig?:
          | T
          | {
              apiKey?: T;
              projectId?: T;
              appId?: T;
              messagingSenderId?: T;
            };
        templates?:
          | T
          | {
              orderStatusUpdate?:
                | T
                | {
                    enabled?: T;
                    title?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                    body?:
                      | T
                      | {
                          ru?: T;
                          en?: T;
                        };
                  };
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "currency-settings_select".
 */
export interface CurrencySettingsSelect<T extends boolean = true> {
  baseCurrency?: T;
  supportedCurrencies?: T;
  displayFormat?:
    | T
    | {
        symbolPosition?: T;
        showCurrencyCode?: T;
        thousandsSeparator?: T;
        decimalSeparator?: T;
        decimalPlaces?: T;
      };
  localeDefaults?:
    | T
    | {
        locale?: T;
        currency?: T;
        format?:
          | T
          | {
              symbolPosition?: T;
              thousandsSeparator?: T;
              decimalSeparator?: T;
            };
        id?: T;
      };
  roundingRules?:
    | T
    | {
        minPrice?: T;
        maxPrice?: T;
        roundTo?: T;
        strategy?: T;
        id?: T;
      };
  markup?:
    | T
    | {
        currency?: T;
        percentage?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exchange-rate-settings_select".
 */
export interface ExchangeRateSettingsSelect<T extends boolean = true> {
  auto?:
    | T
    | {
        enabled?: T;
        provider?: T;
        apiKey?: T;
        updateFrequency?: T;
        lastUpdated?: T;
      };
  rates?:
    | T
    | {
        fromCurrency?: T;
        toCurrency?: T;
        rate?: T;
        manuallySet?: T;
        lastUpdated?: T;
        id?: T;
      };
  display?:
    | T
    | {
        showExchangeRate?: T;
        allowUserCurrencySwitch?: T;
        showPriceInMultipleCurrencies?: T;
      };
  failover?:
    | T
    | {
        maxRateAge?: T;
        fallbackToManualRates?: T;
        disableCurrencySwitching?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webhook-settings_select".
 */
export interface WebhookSettingsSelect<T extends boolean = true> {
  enabled?: T;
  securitySettings?:
    | T
    | {
        signatureSecret?: T;
        enableIPWhitelist?: T;
        ipWhitelist?:
          | T
          | {
              ipAddress?: T;
              description?: T;
              id?: T;
            };
      };
  retrySettings?:
    | T
    | {
        maxRetries?: T;
        retryInterval?: T;
      };
  endpoints?:
    | T
    | {
        name?: T;
        url?: T;
        active?: T;
        events?: T;
        headers?:
          | T
          | {
              key?: T;
              value?: T;
              id?: T;
            };
        lastSent?: T;
        status?: T;
        id?: T;
      };
  logs?:
    | T
    | {
        timestamp?: T;
        endpoint?: T;
        event?: T;
        status?: T;
        responseCode?: T;
        responseTime?: T;
        attemptNumber?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏ —Ä–µ—à–µ–Ω–∞
 */

const { MongoClient } = require('mongodb')

async function verifyDraftFix() {
  console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services...\n')

  const client = new MongoClient('mongodb://127.0.0.1:27017/flow-masters')

  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n')

    const db = client.db('flow-masters')
    const servicesCollection = db.collection('services')
    const versionsCollection = db.collection('_services_versions')

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
    console.log('üìä 1. –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è services:')
    const totalServices = await servicesCollection.countDocuments()
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${totalServices}`)

    const publishedCount = await servicesCollection.countDocuments({ _status: 'published' })
    console.log(`   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö (_status: published): ${publishedCount}`)

    const activeCount = await servicesCollection.countDocuments({ businessStatus: 'active' })
    console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö (businessStatus: active): ${activeCount}`)

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é versions
    console.log('\nüîÑ 2. –ö–æ–ª–ª–µ–∫—Ü–∏—è versions:')
    const totalVersions = await versionsCollection.countDocuments()
    console.log(`   –í—Å–µ–≥–æ –≤–µ—Ä—Å–∏–π: ${totalVersions}`)

    if (totalVersions > 0) {
      const draftVersions = await versionsCollection.countDocuments({ 'version._status': 'draft' })
      console.log(`   –ß–µ—Ä–Ω–æ–≤–∏–∫–æ–≤: ${draftVersions}`)

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
      const sampleDrafts = await versionsCollection.find({ 'version._status': 'draft' }).limit(3).toArray()
      if (sampleDrafts.length > 0) {
        console.log('\n   –ü—Ä–∏–º–µ—Ä—ã —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤:')
        sampleDrafts.forEach((draft, index) => {
          const title = draft.version?.title
          const displayTitle = typeof title === 'object' ? title.ru || title.en : title
          console.log(`     ${index + 1}. ${displayTitle} (Parent: ${draft.parent})`)
        })
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    console.log('\n‚öôÔ∏è 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    const servicesIndexes = await servicesCollection.indexes()
    const hasStatusIndex = servicesIndexes.some(idx => idx.key._status)
    console.log(`   –ò–Ω–¥–µ–∫—Å _status –≤ services: ${hasStatusIndex ? '‚úÖ' : '‚ùå'}`)

    const versionsIndexes = await versionsCollection.indexes()
    const hasVersionStatusIndex = versionsIndexes.some(idx => idx.key['version._status'])
    console.log(`   –ò–Ω–¥–µ–∫—Å version._status –≤ versions: ${hasVersionStatusIndex ? '‚úÖ' : '‚ùå'}`)

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    console.log('\nüåê 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API:')
    
    try {
      const response = await fetch('http://localhost:3000/api/v1/services?_status=published&limit=3')
      if (response.ok) {
        const data = await response.json()
        console.log(`   ‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω–æ ${data.docs?.length || 0} —É—Å–ª—É–≥`)
      } else {
        console.log(`   ‚ùå API –æ—à–∏–±–∫–∞: ${response.status}`)
      }
    } catch (error) {
      console.log(`   ‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∑–∞–ø—É—â–µ–Ω): ${error.message}`)
    }

    // 5. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüéØ 5. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:')
    
    const checks = [
      {
        name: '–í—Å–µ –∑–∞–ø–∏—Å–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã',
        passed: publishedCount === totalServices,
        details: `${publishedCount}/${totalServices}`
      },
      {
        name: '–í—Å–µ –∑–∞–ø–∏—Å–∏ –∞–∫—Ç–∏–≤–Ω—ã',
        passed: activeCount === totalServices,
        details: `${activeCount}/${totalServices}`
      },
      {
        name: '–ö–æ–ª–ª–µ–∫—Ü–∏—è versions –≥–æ—Ç–æ–≤–∞',
        passed: true, // –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
        details: '–ò–Ω–¥–µ–∫—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã'
      },
      {
        name: '–ò–Ω–¥–µ–∫—Å _status —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        passed: hasStatusIndex,
        details: hasStatusIndex ? '–ï—Å—Ç—å' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
      }
    ]

    checks.forEach(check => {
      const status = check.passed ? '‚úÖ' : '‚ùå'
      console.log(`   ${status} ${check.name}: ${check.details}`)
    })

    const allPassed = checks.every(check => check.passed)

    console.log('\n' + '='.repeat(60))
    if (allPassed) {
      console.log('üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!')
      console.log('\n‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏ —Ä–µ—à–µ–Ω–∞:')
      console.log('   - –ü–æ–ª–µ status –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –≤ businessStatus')
      console.log('   - –°–∏—Å—Ç–µ–º–∞ versions/drafts –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
      console.log('   - –í—Å–µ –∑–∞–ø–∏—Å–∏ –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π _status')
      console.log('   - API –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å—Ö–µ–º–æ–π')
      console.log('\nüéØ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:')
      console.log('   1. –°–æ–∑–¥–∞–≤–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
      console.log('   2. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏')
      console.log('   3. –£–¥–∞–ª—è—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏')
      console.log('   4. –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏')
      console.log('   5. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é')
    } else {
      console.log('‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´!')
      console.log('\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏.')
    }
    console.log('='.repeat(60))

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await client.close()
  }
}

verifyDraftFix()

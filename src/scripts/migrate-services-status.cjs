#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—è status –≤ businessStatus –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services
 * –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏
 */

const { MongoClient } = require('mongodb')

async function migrateServicesStatus() {
  console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—è status –≤ businessStatus –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services...\n')

  const client = new MongoClient('mongodb://127.0.0.1:27017/flow-masters')

  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n')

    const db = client.db('flow-masters')
    const servicesCollection = db.collection('services')

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('üìä 1. –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:')
    const totalCount = await servicesCollection.countDocuments()
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${totalCount}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ä–æ–º—É –ø–æ–ª—é status
    const statusStats = await servicesCollection.aggregate([
      {
        $group: {
          _id: '$status',
          count: { $sum: 1 }
        }
      },
      { $sort: { count: -1 } }
    ]).toArray()

    console.log('   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ä–æ–º—É –ø–æ–ª—é status:')
    statusStats.forEach(stat => {
      console.log(`     ${stat._id || 'undefined'}: ${stat.count}`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª–µ businessStatus
    const businessStatusStats = await servicesCollection.aggregate([
      {
        $group: {
          _id: '$businessStatus',
          count: { $sum: 1 }
        }
      },
      { $sort: { count: -1 } }
    ]).toArray()

    console.log('   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–æ–≤–æ–º—É –ø–æ–ª—é businessStatus:')
    businessStatusStats.forEach(stat => {
      console.log(`     ${stat._id || 'undefined'}: ${stat.count}`)
    })

    // 2. –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüîÑ 2. –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö:')
    
    let migratedCount = 0
    let errorCount = 0

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
    const services = await servicesCollection.find({}).toArray()

    for (const service of services) {
      try {
        const updateData = {}
        let needsUpdate = false

        // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—è businessStatus, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ status
        if (!service.businessStatus) {
          if (service.status === 'published') {
            updateData.businessStatus = 'active'
          } else if (service.status === 'archived') {
            updateData.businessStatus = 'archived'
          } else if (service.status === 'draft') {
            updateData.businessStatus = 'active' // –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º–∏
          } else {
            updateData.businessStatus = 'active' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
          }
          needsUpdate = true
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º _status –∫–∞–∫ published –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        if (service._status !== 'published') {
          updateData._status = 'published'
          needsUpdate = true
        }

        // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –≤—ã–ø–æ–ª–Ω—è–µ–º –µ–≥–æ
        if (needsUpdate) {
          await servicesCollection.updateOne(
            { _id: service._id },
            { $set: updateData }
          )
          
          console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${service.title} (${service._id})`)
          console.log(`      - businessStatus: ${updateData.businessStatus || service.businessStatus}`)
          console.log(`      - _status: ${updateData._status || service._status}`)
          migratedCount++
        } else {
          console.log(`   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${service.title} (—É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ)`)
        }

      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ${service.title}: ${error.message}`)
        errorCount++
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä 3. –†–µ–∑—É–ª—å—Ç–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏:')
    console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${migratedCount}`)
    console.log(`   –û—à–∏–±–æ–∫: ${errorCount}`)

    // –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const finalBusinessStatusStats = await servicesCollection.aggregate([
      {
        $group: {
          _id: '$businessStatus',
          count: { $sum: 1 }
        }
      },
      { $sort: { count: -1 } }
    ]).toArray()

    console.log('\n   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ businessStatus:')
    finalBusinessStatusStats.forEach(stat => {
      console.log(`     ${stat._id || 'undefined'}: ${stat.count}`)
    })

    const finalStatusStats = await servicesCollection.aggregate([
      {
        $group: {
          _id: '$_status',
          count: { $sum: 1 }
        }
      },
      { $sort: { count: -1 } }
    ]).toArray()

    console.log('\n   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ _status:')
    finalStatusStats.forEach(stat => {
      console.log(`     ${stat._id || 'undefined'}: ${stat.count}`)
    })

    // 4. –û—á–∏—â–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é versions (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    console.log('\nüßπ 4. –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ versions:')
    const versionsCollection = db.collection('_services_versions')
    const versionsCount = await versionsCollection.countDocuments()
    
    if (versionsCount > 0) {
      console.log(`   –ù–∞–π–¥–µ–Ω–æ ${versionsCount} —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π`)
      console.log('   –û—á–∏—â–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é versions –¥–ª—è —Å–≤–µ–∂–µ–≥–æ —Å—Ç–∞—Ä—Ç–∞...')
      await versionsCollection.deleteMany({})
      console.log('   ‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è versions –æ—á–∏—â–µ–Ω–∞')
    } else {
      console.log('   –ö–æ–ª–ª–µ–∫—Ü–∏—è versions —É–∂–µ –ø—É—Å—Ç–∞')
    }

    console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    console.log('\nüìù –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:')
    console.log('   - –ü–æ–ª–µ status –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –≤ businessStatus')
    console.log('   - –í—Å–µ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—É—á–∏–ª–∏ _status = "published"')
    console.log('   - –ö–æ–ª–ª–µ–∫—Ü–∏—è versions –æ—á–∏—â–µ–Ω–∞ –¥–ª—è —Å–≤–µ–∂–µ–≥–æ —Å—Ç–∞—Ä—Ç–∞')
    console.log('   - –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await client.close()
  }
}

migrateServicesStatus()

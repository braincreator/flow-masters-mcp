#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–µ–π –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
 * –ü—Ä–æ–±–ª–µ–º–∞: –∑–∞–ø–∏—Å–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–ª—è versions
 */

const { MongoClient } = require('mongodb')

async function fixAdminPanelVisibility() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–µ–π –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏...\n')

  const client = new MongoClient('mongodb://127.0.0.1:27017/flow-masters')

  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n')

    const db = client.db('flow-masters')
    const servicesCollection = db.collection('services')

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('üìä 1. –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:')
    const totalServices = await servicesCollection.countDocuments()
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${totalServices}`)

    const servicesWithoutVersions = await servicesCollection.countDocuments({
      $or: [
        { versions: { $exists: false } },
        { versions: null }
      ]
    })
    console.log(`   –ó–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–æ–ª—è versions: ${servicesWithoutVersions}`)

    // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏
    console.log('\nüîß 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π:')
    
    let fixedCount = 0
    let errorCount = 0

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –±–µ–∑ –ø–æ–ª—è versions
    const servicesToFix = await servicesCollection.find({
      $or: [
        { versions: { $exists: false } },
        { versions: null }
      ]
    }).toArray()

    console.log(`   –ù–∞–π–¥–µ–Ω–æ ${servicesToFix.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è`)

    for (const service of servicesToFix) {
      try {
        const title = typeof service.title === 'object' 
          ? (service.title.ru || service.title.en || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
          : service.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'

        console.log(`   –ò—Å–ø—Ä–∞–≤–ª—è–µ–º: ${title} (${service._id})`)

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ versions –∫–∞–∫ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
        // –≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç Payload CMS, —á—Ç–æ –∑–∞–ø–∏—Å—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç versions, –Ω–æ –ø–æ–∫–∞ –Ω–µ—Ç –≤–µ—Ä—Å–∏–π
        const updateResult = await servicesCollection.updateOne(
          { _id: service._id },
          { 
            $set: { 
              versions: [],
              // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ _status —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
              _status: 'published'
            }
          }
        )

        if (updateResult.modifiedCount > 0) {
          console.log(`     ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ`)
          fixedCount++
        } else {
          console.log(`     ‚ö†Ô∏è –ù–µ –∏–∑–º–µ–Ω–µ–Ω–æ (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)`)
        }

      } catch (error) {
        console.log(`     ‚ùå –û—à–∏–±–∫–∞: ${error.message}`)
        errorCount++
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä 3. –†–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:')
    console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${fixedCount}`)
    console.log(`   –û—à–∏–±–æ–∫: ${errorCount}`)

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    const finalServicesWithoutVersions = await servicesCollection.countDocuments({
      $or: [
        { versions: { $exists: false } },
        { versions: null }
      ]
    })
    console.log(`   –ó–∞–ø–∏—Å–µ–π –±–µ–∑ versions –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${finalServicesWithoutVersions}`)

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
    console.log('\nüîç 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏:')
    const fixedService = await servicesCollection.findOne({ versions: { $exists: true } })
    if (fixedService) {
      const title = typeof fixedService.title === 'object' 
        ? (fixedService.title.ru || fixedService.title.en)
        : fixedService.title
      
      console.log(`   –ü—Ä–∏–º–µ—Ä –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏: ${title}`)
      console.log(`   - _id: ${fixedService._id}`)
      console.log(`   - _status: ${fixedService._status}`)
      console.log(`   - businessStatus: ${fixedService.businessStatus}`)
      console.log(`   - versions: ${JSON.stringify(fixedService.versions)}`)
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π API
    console.log('\nüîå 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ API:')
    try {
      const response = await fetch('http://localhost:3000/api/services')
      if (response.ok) {
        const data = await response.json()
        console.log(`   ‚úÖ –ê–¥–º–∏–Ω—Å–∫–∏–π API —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: ${data.docs?.length || 0} –∑–∞–ø–∏—Å–µ–π`)
        
        if (data.docs && data.docs.length > 0) {
          console.log('   –ü–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏:')
          data.docs.slice(0, 3).forEach((doc, index) => {
            const title = typeof doc.title === 'object' 
              ? (doc.title.ru || doc.title.en)
              : doc.title
            console.log(`     ${index + 1}. ${title} (ID: ${doc.id})`)
          })
        }
      } else {
        console.log(`   ‚ùå –ê–¥–º–∏–Ω—Å–∫–∏–π API –æ—à–∏–±–∫–∞: ${response.status}`)
      }
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: ${error.message}`)
    }

    console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    
    if (fixedCount > 0) {
      console.log('\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç:')
      console.log('   - –ó–∞–ø–∏—Å–∏ —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
      console.log('   - –ü–æ–ª–µ versions –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫–æ –≤—Å–µ–º –∑–∞–ø–∏—Å—è–º')
      console.log('   - _status —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ "published"')
      console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
      console.log('   1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ (F5)')
      console.log('   2. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ')
      console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∑–∞–ø–∏—Å–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è')
    } else {
      console.log('\n‚ö†Ô∏è –ó–∞–ø–∏—Å–∏ —É–∂–µ –±—ã–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Ä–∞–Ω–µ–µ')
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await client.close()
  }
}

fixAdminPanelVisibility()

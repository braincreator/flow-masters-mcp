#!/usr/bin/env tsx

/**
 * Script to create AI Agency subscription plans for testing
 * Run with: npx tsx src/scripts/create-ai-plans.ts
 */

import { getPayloadClient } from '@/utilities/payload/index'

const aiPlans = [
  {
    name: '–°—Ç–∞—Ä—Ç–µ—Ä',
    description: '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ —Å –ò–ò',
    features: [
      { feature: '–ß–∞—Ç-–±–æ—Ç –¥–ª—è –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã' },
      { feature: '–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM' },
      { feature: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 30 –¥–Ω–µ–π' },
      { feature: '–û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã' },
      { feature: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è' }
    ],
    price: 80000,
    currency: 'RUB',
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 0,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    metadata: {
      category: 'ai-agency',
      level: 'starter',
      prepaymentPercentage: 50
    }
  },
  {
    name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
    description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –ò–ò-—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Ç—É—â–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
    features: [
      { feature: '–ò–ò-–∞–≥–µ–Ω—Ç + —á–∞—Ç-–±–æ—Ç—ã' },
      { feature: '–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è' },
      { feature: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 90 –¥–Ω–µ–π' },
      { feature: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã' },
      { feature: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä' },
      { feature: '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∏' }
    ],
    price: 180000,
    currency: 'RUB',
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 0,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    metadata: {
      category: 'ai-agency',
      level: 'professional',
      prepaymentPercentage: 50,
      isPopular: true
    }
  },
  {
    name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π',
    description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ò–ò-—ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π',
    features: [
      { feature: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ò–ò-—ç–∫–æ—Å–∏—Å—Ç–µ–º–∞' },
      { feature: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞' },
      { feature: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 12 –º–µ—Å—è—Ü–µ–≤' },
      { feature: '–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞' },
      { feature: 'SLA –≥–∞—Ä–∞–Ω—Ç–∏–∏' },
      { feature: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–æ—Ä–ø. —Å–∏—Å—Ç–µ–º–∞–º–∏' },
      { feature: '–û–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤' }
    ],
    price: 350000,
    currency: 'RUB',
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 0,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    metadata: {
      category: 'ai-agency',
      level: 'enterprise',
      prepaymentPercentage: 50,
      isCustom: true
    }
  },
  // English versions
  {
    name: 'Starter',
    description: 'Perfect for small businesses starting with AI',
    features: [
      { feature: 'Chatbot for one platform' },
      { feature: 'Basic CRM integration' },
      { feature: '30 days technical support' },
      { feature: 'Team training' },
      { feature: 'Documentation' }
    ],
    price: 80000,
    currency: 'RUB',
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 0,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    metadata: {
      category: 'ai-agency',
      level: 'starter',
      prepaymentPercentage: 50,
      locale: 'en'
    }
  },
  {
    name: 'Professional',
    description: 'Comprehensive AI solution for growing businesses',
    features: [
      { feature: 'AI agent + chatbots' },
      { feature: 'Full integration' },
      { feature: '90 days technical support' },
      { feature: 'Analytics and reports' },
      { feature: 'Personal manager' },
      { feature: 'Updates and improvements' }
    ],
    price: 180000,
    currency: 'RUB',
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 0,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    metadata: {
      category: 'ai-agency',
      level: 'professional',
      prepaymentPercentage: 50,
      isPopular: true,
      locale: 'en'
    }
  },
  {
    name: 'Enterprise',
    description: 'Custom AI ecosystem for large organizations',
    features: [
      { feature: 'Comprehensive AI ecosystem' },
      { feature: 'Custom development' },
      { feature: '12 months technical support' },
      { feature: 'Dedicated team' },
      { feature: 'SLA guarantees' },
      { feature: 'Corporate systems integration' },
      { feature: 'Employee training' }
    ],
    price: 350000,
    currency: 'RUB',
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 0,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    metadata: {
      category: 'ai-agency',
      level: 'enterprise',
      prepaymentPercentage: 50,
      isCustom: true,
      locale: 'en'
    }
  }
]

async function createAIPlans() {
  console.log('üí∞ Creating AI Agency subscription plans...')
  
  try {
    const payload = await getPayloadClient()
    console.log('‚úÖ Payload client initialized')

    for (const planData of aiPlans) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–ª–∞–Ω —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
        const existing = await payload.find({
          collection: 'subscription-plans',
          where: {
            and: [
              {
                name: {
                  equals: planData.name
                }
              },
              {
                'metadata.category': {
                  equals: 'ai-agency'
                }
              }
            ]
          },
          limit: 1
        })

        if (existing.docs.length > 0) {
          console.log(`‚ö†Ô∏è  Plan "${planData.name}" already exists, skipping...`)
          continue
        }

        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω
        const plan = await payload.create({
          collection: 'subscription-plans',
          data: planData
        })

        console.log(`‚úÖ Created plan: ${plan.name} (${plan.id})`)
      } catch (error) {
        console.error(`‚ùå Error creating plan "${planData.name}":`, error)
      }
    }

    console.log('üéâ AI Agency subscription plans creation completed!')
  } catch (error) {
    console.error('‚ùå Error:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
createAIPlans()

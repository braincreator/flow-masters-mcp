#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —É —É—Å–ª—É–≥
 */

const { MongoClient } = require('mongodb')

async function checkSeoMeta() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —É —É—Å–ª—É–≥...\n')

  const client = new MongoClient('mongodb://127.0.0.1:27017/flow-masters')

  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n')

    const db = client.db('flow-masters')
    const servicesCollection = db.collection('services')

    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏
    console.log('üìä 1. –ê–Ω–∞–ª–∏–∑ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:')
    const allServices = await servicesCollection.find({}).toArray()
    console.log(`   –í—Å–µ–≥–æ —É—Å–ª—É–≥: ${allServices.length}`)

    let servicesWithoutMeta = []
    let servicesWithIncompleteMeta = []
    let servicesWithCompleteMeta = []

    // 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —É—Å–ª—É–≥—É
    console.log('\nüìã 2. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ —É—Å–ª—É–≥–∞–º:')
    
    allServices.forEach((service, index) => {
      const title = typeof service.title === 'object' 
        ? (service.title.ru || service.title.en || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        : service.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'
      
      console.log(`\n   ${index + 1}. ${title}`)
      console.log(`      ID: ${service._id}`)
      console.log(`      –¢–∏–ø: ${service.serviceType}`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º meta –ø–æ–ª—è
      const meta = service.meta || {}
      const hasMetaTitle = meta.title && (
        (typeof meta.title === 'object' && (meta.title.ru || meta.title.en)) ||
        (typeof meta.title === 'string' && meta.title.trim())
      )
      const hasMetaDescription = meta.description && (
        (typeof meta.description === 'object' && (meta.description.ru || meta.description.en)) ||
        (typeof meta.description === 'string' && meta.description.trim())
      )
      const hasMetaImage = meta.image

      console.log(`      Meta Title: ${hasMetaTitle ? '‚úÖ' : '‚ùå'} ${hasMetaTitle ? (typeof meta.title === 'object' ? '–õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–æ' : '–ï—Å—Ç—å') : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`)
      console.log(`      Meta Description: ${hasMetaDescription ? '‚úÖ' : '‚ùå'} ${hasMetaDescription ? (typeof meta.description === 'object' ? '–õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–æ' : '–ï—Å—Ç—å') : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`)
      console.log(`      Meta Image: ${hasMetaImage ? '‚úÖ' : '‚ùå'} ${hasMetaImage ? '–ï—Å—Ç—å' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`)

      // –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ–º —É—Å–ª—É–≥–∏
      if (!hasMetaTitle && !hasMetaDescription && !hasMetaImage) {
        servicesWithoutMeta.push(service)
      } else if (!hasMetaTitle || !hasMetaDescription) {
        servicesWithIncompleteMeta.push(service)
      } else {
        servicesWithCompleteMeta.push(service)
      }
    })

    // 3. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä 3. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:')
    console.log(`   ‚úÖ –ü–æ–ª–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${servicesWithCompleteMeta.length} —É—Å–ª—É–≥`)
    console.log(`   ‚ö†Ô∏è –ù–µ–ø–æ–ª–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${servicesWithIncompleteMeta.length} —É—Å–ª—É–≥`)
    console.log(`   ‚ùå –ë–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: ${servicesWithoutMeta.length} —É—Å–ª—É–≥`)

    // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    if (servicesWithoutMeta.length > 0) {
      console.log('\n‚ùå 4. –£—Å–ª—É–≥–∏ –ë–ï–ó –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:')
      servicesWithoutMeta.forEach((service, index) => {
        const title = typeof service.title === 'object' 
          ? (service.title.ru || service.title.en)
          : service.title
        console.log(`   ${index + 1}. ${title} (${service.serviceType})`)
      })
    }

    // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ —Å –Ω–µ–ø–æ–ª–Ω—ã–º–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
    if (servicesWithIncompleteMeta.length > 0) {
      console.log('\n‚ö†Ô∏è 5. –£—Å–ª—É–≥–∏ —Å –ù–ï–ü–û–õ–ù–´–ú–ò –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏:')
      servicesWithIncompleteMeta.forEach((service, index) => {
        const title = typeof service.title === 'object' 
          ? (service.title.ru || service.title.en)
          : service.title
        console.log(`   ${index + 1}. ${title} (${service.serviceType})`)
        
        const meta = service.meta || {}
        const hasMetaTitle = meta.title && (
          (typeof meta.title === 'object' && (meta.title.ru || meta.title.en)) ||
          (typeof meta.title === 'string' && meta.title.trim())
        )
        const hasMetaDescription = meta.description && (
          (typeof meta.description === 'object' && (meta.description.ru || meta.description.en)) ||
          (typeof meta.description === 'string' && meta.description.trim())
        )
        
        if (!hasMetaTitle) console.log(`      - –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Meta Title`)
        if (!hasMetaDescription) console.log(`      - –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Meta Description`)
        if (!meta.image) console.log(`      - –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Meta Image`)
      })
    }

    // 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüéØ 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
    
    if (servicesWithoutMeta.length > 0 || servicesWithIncompleteMeta.length > 0) {
      console.log('   üìù –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è:')
      console.log(`      - ${servicesWithoutMeta.length} —É—Å–ª—É–≥ –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö`)
      console.log(`      - ${servicesWithIncompleteMeta.length} —É—Å–ª—É–≥ —Å –Ω–µ–ø–æ–ª–Ω—ã–º–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏`)
      console.log('\n   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ meta:')
      console.log('      - title: –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (50-60 —Å–∏–º–≤–æ–ª–æ–≤)')
      console.log('      - description: –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (150-160 —Å–∏–º–≤–æ–ª–æ–≤)')
      console.log('      - image: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π')
      console.log('\n   üîß –•–æ—Ç–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ?')
      console.log('      –Ø –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö')
    } else {
      console.log('   ‚úÖ –í—Å–µ —É—Å–ª—É–≥–∏ –∏–º–µ—é—Ç –ø–æ–ª–Ω—ã–µ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ!')
    }

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await client.close()
  }
}

checkSeoMeta()

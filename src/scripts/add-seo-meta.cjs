#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫ —É—Å–ª—É–≥–∞–º
 */

const { MongoClient } = require('mongodb')

// SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–∏
const seoMetadata = {
  // –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
  'standard-ai-consultation': {
    title: {
      ru: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ò–ò | –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –ø–ª–∞–Ω –≤–Ω–µ–¥—Ä–µ–Ω–∏—è',
      en: 'Standard AI Consultation | In-depth Analysis and Implementation Plan'
    },
    description: {
      ru: '–£–≥–ª—É–±–ª–µ–Ω–Ω–∞—è 90-–º–∏–Ω—É—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò–ò —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ø–ª–∞–Ω–æ–º, ROI-—Ä–∞—Å—á–µ—Ç–∞–º–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
      en: 'In-depth 90-minute AI implementation consultation with detailed plan, ROI calculations and personalized recommendations for your business.'
    }
  },
  'premium-ai-consultation': {
    title: {
      ru: '–ü—Ä–µ–º–∏—É–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ò–ò | VIP-—Å–µ—Å—Å–∏—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º 3 —á–∞—Å–∞',
      en: 'Premium AI Consultation | VIP Expert Session 3 Hours'
    },
    description: {
      ru: 'VIP-—Å–µ—Å—Å–∏—è 3 —á–∞—Å–∞ —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ –ò–ò. –í–∫–ª—é—á–∞–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –≤–Ω–µ–¥—Ä–µ–Ω–∏—è, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.',
      en: 'VIP 3-hour session with AI expert. Includes implementation strategy, technical specifications and detailed realization plan for your project.'
    }
  },

  // –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç–±–æ—Ç–æ–≤
  'basic-ai-chatbot': {
    title: {
      ru: '–ë–∞–∑–æ–≤—ã–π –ò–ò-—á–∞—Ç–±–æ—Ç | –ü—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏',
      en: 'Basic AI Chatbot | Simple Automation Solution'
    },
    description: {
      ru: '–ü—Ä–æ—Å—Ç–æ–π –ò–ò-—á–∞—Ç–±–æ—Ç –¥–ª—è –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å –±–∞–∑–æ–≤—ã–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –∏ –≥–æ—Ç–æ–≤—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏ –æ–±—â–µ–Ω–∏—è. –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.',
      en: 'Simple AI chatbot for one platform with basic artificial intelligence and ready-made conversation scenarios. Quick automation start.'
    }
  },
  'standard-ai-chatbot': {
    title: {
      ru: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ò–ò-—á–∞—Ç–±–æ—Ç | –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏',
      en: 'Standard AI Chatbot | Advanced Solution with Integrations'
    },
    description: {
      ru: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —á–∞—Ç-–±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è–º–∏, –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏ –º—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—å—é. –£–º–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ä–∞—Å—Ç—É—â–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
      en: 'Advanced chatbot with integrations, analytics and multi-platform support. Smart customer service automation for growing business.'
    }
  },
  'premium-ai-chatbot': {
    title: {
      ru: '–ü—Ä–µ–º–∏—É–º –ò–ò-—á–∞—Ç–±–æ—Ç | –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ–¥ –∫–ª—é—á',
      en: 'Premium AI Chatbot | Enterprise Turnkey Solution'
    },
    description: {
      ru: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Å–∏—Å—Ç–µ–º. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∫—Ä—É–ø–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.',
      en: 'Enterprise solution with full automation and system integration. Maximum functionality for large business and complex processes.'
    }
  },

  // –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
  'ai-agents-turnkey': {
    title: {
      ru: '–ò–ò-–∞–≥–µ–Ω—Ç—ã –ø–æ–¥ –∫–ª—é—á | –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
      en: 'AI Agents Turnkey | Autonomous Process Automation'
    },
    description: {
      ru: '–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–µ –ò–ò-–∞–≥–µ–Ω—Ç—ã –¥–ª—è –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Å–ª–æ–∂–Ω—ã—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –°–∞–º–æ–æ–±—É—á–∞—é—â–∏–µ—Å—è —Å–∏—Å—Ç–µ–º—ã –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
      en: 'Autonomous AI agents for complete automation of complex business processes. Next-generation self-learning systems for your business.'
    }
  },
  'ai-integration': {
    title: {
      ru: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ò–ò –≤ –ø—Ä–æ—Ü–µ—Å—Å—ã | –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞',
      en: 'AI Integration in Processes | Complete Business Automation'
    },
    description: {
      ru: '–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ò–ò-—Ä–µ—à–µ–Ω–∏–π –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã –∫–æ–º–ø–∞–Ω–∏–∏. –ë–µ—Å—à–æ–≤–Ω–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ –≤–∞—à—É —ç–∫–æ—Å–∏—Å—Ç–µ–º—É.',
      en: 'Complete integration of AI solutions into existing company business processes. Seamless implementation of artificial intelligence into your ecosystem.'
    }
  },
  'ai-sales-funnels': {
    title: {
      ru: '–ê–≤—Ç–æ–≤–æ—Ä–æ–Ω–∫–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è | –£–º–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–Ω—ã–µ –≤–æ—Ä–æ–Ω–∫–∏ —Å –ò–ò',
      en: 'Auto-funnels and Personalization | Smart AI Sales Funnels'
    },
    description: {
      ru: '–£–º–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–Ω—ã–µ –≤–æ—Ä–æ–Ω–∫–∏ —Å –ò–ò-–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π. –£–≤–µ–ª–∏—á—å—Ç–µ –∫–æ–Ω–≤–µ—Ä—Å–∏—é —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.',
      en: 'Smart sales funnels with AI personalization and automatic optimization. Increase conversion with artificial intelligence.'
    }
  }
}

async function addSeoMeta() {
  console.log('üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫ —É—Å–ª—É–≥–∞–º...\n')

  const client = new MongoClient('mongodb://127.0.0.1:27017/flow-masters')

  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n')

    const db = client.db('flow-masters')
    const servicesCollection = db.collection('services')

    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏ –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    console.log('üìä 1. –ü–æ–∏—Å–∫ —É—Å–ª—É–≥ –±–µ–∑ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:')
    
    const servicesWithoutMeta = await servicesCollection.find({
      $or: [
        { 'meta.title': { $exists: false } },
        { 'meta.title': null },
        { 'meta.title': '' },
        { 'meta.description': { $exists: false } },
        { 'meta.description': null },
        { 'meta.description': '' }
      ]
    }).toArray()

    console.log(`   –ù–∞–π–¥–µ–Ω–æ ${servicesWithoutMeta.length} —É—Å–ª—É–≥ –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö`)

    // 2. –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    console.log('\nüîß 2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:')
    
    let updatedCount = 0
    let errorCount = 0

    for (const service of servicesWithoutMeta) {
      try {
        const title = typeof service.title === 'object' 
          ? (service.title.ru || service.title.en || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
          : service.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'

        console.log(`   –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${title}`)
        console.log(`   Slug: ${service.slug}`)

        // –ò—â–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–æ slug
        const metaData = seoMetadata[service.slug]
        
        if (metaData) {
          // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å —Å SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
          const updateResult = await servicesCollection.updateOne(
            { _id: service._id },
            {
              $set: {
                'meta.title': metaData.title,
                'meta.description': metaData.description
              }
            }
          )

          if (updateResult.modifiedCount > 0) {
            console.log(`     ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ`)
            console.log(`     - Title (RU): ${metaData.title.ru.substring(0, 50)}...`)
            console.log(`     - Title (EN): ${metaData.title.en.substring(0, 50)}...`)
            updatedCount++
          } else {
            console.log(`     ‚ö†Ô∏è –ù–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`)
          }
        } else {
          console.log(`     ‚ö†Ô∏è –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è slug: ${service.slug}`)
          
          // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
          const shortDesc = typeof service.shortDescription === 'object'
            ? service.shortDescription
            : { ru: service.shortDescription || '', en: service.shortDescription || '' }

          const serviceTitle = typeof service.title === 'object'
            ? service.title
            : { ru: service.title || '', en: service.title || '' }

          const basicMeta = {
            title: {
              ru: `${serviceTitle.ru} | Flow Masters`,
              en: `${serviceTitle.en} | Flow Masters`
            },
            description: shortDesc
          }

          const updateResult = await servicesCollection.updateOne(
            { _id: service._id },
            {
              $set: {
                'meta.title': basicMeta.title,
                'meta.description': basicMeta.description
              }
            }
          )

          if (updateResult.modifiedCount > 0) {
            console.log(`     ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –±–∞–∑–æ–≤—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ`)
            updatedCount++
          }
        }

      } catch (error) {
        console.log(`     ‚ùå –û—à–∏–±–∫–∞: ${error.message}`)
        errorCount++
      }
    }

    // 3. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\nüìä 3. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:')
    console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ª—É–≥: ${updatedCount}`)
    console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${errorCount}`)

    // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüîç 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:')
    
    const servicesWithMeta = await servicesCollection.countDocuments({
      'meta.title': { $exists: true, $ne: null, $ne: '' },
      'meta.description': { $exists: true, $ne: null, $ne: '' }
    })

    const totalServices = await servicesCollection.countDocuments()
    
    console.log(`   –£—Å–ª—É–≥ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏: ${servicesWithMeta} –∏–∑ ${totalServices}`)
    
    if (servicesWithMeta === totalServices) {
      console.log('   ‚úÖ –í—Å–µ —É—Å–ª—É–≥–∏ —Ç–µ–ø–µ—Ä—å –∏–º–µ—é—Ç SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ!')
    } else {
      console.log(`   ‚ö†Ô∏è –ï—â–µ ${totalServices - servicesWithMeta} —É—Å–ª—É–≥ –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö`)
    }

    // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    if (updatedCount > 0) {
      console.log('\nüìã 5. –ü—Ä–∏–º–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:')
      
      const updatedServices = await servicesCollection.find({
        'meta.title': { $exists: true },
        'meta.description': { $exists: true }
      }).limit(3).toArray()

      updatedServices.forEach((service, index) => {
        const title = typeof service.title === 'object' 
          ? (service.title.ru || service.title.en)
          : service.title
        
        console.log(`   ${index + 1}. ${title}`)
        if (service.meta.title) {
          console.log(`      Meta Title (RU): ${service.meta.title.ru}`)
          console.log(`      Meta Title (EN): ${service.meta.title.en}`)
        }
        if (service.meta.description) {
          console.log(`      Meta Desc (RU): ${service.meta.description.ru.substring(0, 100)}...`)
          console.log(`      Meta Desc (EN): ${service.meta.description.en.substring(0, 100)}...`)
        }
        console.log('')
      })
    }

    console.log('\n‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await client.close()
  }
}

addSeoMeta()

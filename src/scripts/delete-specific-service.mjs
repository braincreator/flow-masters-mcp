#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ services
 */

import { getPayload } from 'payload'
import configPromise from '../../src/payload.config.ts'

async function deleteSpecificService() {
  console.log('üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ services...\n')

  try {
    const payload = await getPayload({ config: configPromise })
    console.log('‚úÖ Payload –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n')

    const serviceId = '684367906fd0cdafe0d5a57e'
    
    console.log(`üîç –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ —Å ID: ${serviceId}`)
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å
    try {
      const service = await payload.findByID({
        collection: 'services',
        id: serviceId,
      })
      
      console.log(`üìã –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å: ${service.title} (Status: ${service.status})`)
      
      // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
      await payload.delete({
        collection: 'services',
        id: serviceId,
      })
      
      console.log(`‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞`)
      
    } catch (error) {
      console.log(`‚ùå –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞: ${error.message}`)
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å draft: true
      try {
        console.log(`üîç –ü–æ–∏—Å–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–∞...`)
        const draftService = await payload.findByID({
          collection: 'services',
          id: serviceId,
          draft: true,
        })
        
        console.log(`üìã –ù–∞–π–¥–µ–Ω —á–µ—Ä–Ω–æ–≤–∏–∫: ${draftService.title} (Status: ${draftService.status})`)
        
        // –£–¥–∞–ª—è–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫
        await payload.delete({
          collection: 'services',
          id: serviceId,
        })
        
        console.log(`‚úÖ –ß–µ—Ä–Ω–æ–≤–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`)
        
      } catch (draftError) {
        console.log(`‚ùå –ß–µ—Ä–Ω–æ–≤–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${draftError.message}`)
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const finalCheck = await payload.find({
      collection: 'services',
      limit: 0,
    })

    console.log(`\nüîç –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:`)
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${finalCheck.totalDocs}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫–∏
    try {
      const draftsCheck = await payload.find({
        collection: 'services',
        draft: true,
        limit: 10,
      })
      
      console.log(`   –ó–∞–ø–∏—Å–µ–π —Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏: ${draftsCheck.totalDocs}`)
      
      if (draftsCheck.totalDocs > 0) {
        draftsCheck.docs.forEach((service, index) => {
          console.log(`   ${index + 1}. ${service.title} (ID: ${service.id}, Status: ${service.status})`)
        })
      }
    } catch (error) {
      console.log(`   –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤: ${error.message}`)
    }

    console.log('\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
deleteSpecificService()
  .then(() => {
    console.log('\nüéâ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })

#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services
 */

import { getPayload } from 'payload'
import configPromise from '../../src/payload.config.ts'

async function cleanupDraftServices() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services...\n')

  try {
    const payload = await getPayload({ config: configPromise })
    console.log('‚úÖ Payload –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n')

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∏
    const draftServices = await payload.find({
      collection: 'services',
      where: {
        status: {
          equals: 'draft',
        },
      },
      limit: 100,
    })

    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${draftServices.totalDocs} —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤:`)
    
    let deletedCount = 0
    
    for (const service of draftServices.docs) {
      console.log(`   - ${service.title} (ID: ${service.id})`)
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "—ã–≤—ã—Ñ–≤—ã" –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏)
      if (
        service.title === '—ã–≤—ã—Ñ–≤—ã' ||
        service.title === 'test' ||
        service.title === 'Test' ||
        service.title === '—Ç–µ—Å—Ç' ||
        service.title === '–¢–µ—Å—Ç' ||
        service.title.includes('test') ||
        service.title.includes('Test')
      ) {
        try {
          await payload.delete({
            collection: 'services',
            id: service.id,
          })
          console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω: ${service.title}`)
          deletedCount++
        } catch (error) {
          console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${service.title}: ${error.message}`)
        }
      } else {
        console.log(`   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω: ${service.title} (–Ω–µ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å)`)
      }
    }

    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`)
    console.log(`   –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${deletedCount}`)
    console.log(`   –û—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${draftServices.totalDocs - deletedCount}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const finalCheck = await payload.find({
      collection: 'services',
      limit: 0, // –¢–æ–ª—å–∫–æ count
    })

    console.log(`\nüîç –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:`)
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${finalCheck.totalDocs}`)

    const publishedCheck = await payload.find({
      collection: 'services',
      where: {
        status: {
          equals: 'published',
        },
      },
      limit: 0,
    })

    console.log(`   –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö: ${publishedCheck.totalDocs}`)

    const draftCheck = await payload.find({
      collection: 'services',
      where: {
        status: {
          equals: 'draft',
        },
      },
      limit: 0,
    })

    console.log(`   –ß–µ—Ä–Ω–æ–≤–∏–∫–æ–≤: ${draftCheck.totalDocs}`)

    console.log('\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
cleanupDraftServices()
  .then(() => {
    console.log('\nüéâ –û—á–∏—Å—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })

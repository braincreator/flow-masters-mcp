#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–π –∑–∞–ø–∏—Å–µ–π services
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–µ—Ä—Å–∏—è–º–∏ —É —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π
 */

import { getPayload } from 'payload'
import configPromise from '../../src/payload.config.ts'

async function checkServicesVersions() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π –∑–∞–ø–∏—Å–µ–π services...\n')

  try {
    const payload = await getPayload({ config: configPromise })
    console.log('‚úÖ Payload –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n')

    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ services
    console.log('üìã 1. –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π services:')
    const allServices = await payload.find({
      collection: 'services',
      limit: 100,
    })

    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${allServices.totalDocs}`)

    // 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –≤–µ—Ä—Å–∏–π
    console.log('\nüîß 2. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–ø–∏—Å–µ–π:')
    
    let recordsWithVersions = 0
    let recordsWithoutVersions = 0
    let recordsWithProblems = []

    for (const service of allServices.docs) {
      console.log(`\n   üìÑ ${service.title} (ID: ${service.id})`)
      console.log(`      Status: ${service.status}`)
      console.log(`      _status: ${service._status}`)
      console.log(`      Created: ${service.createdAt}`)
      console.log(`      Updated: ${service.updatedAt}`)
      console.log(`      Published: ${service.publishedAt || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}`)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–µ—Ä—Å–∏–π
      try {
        const versions = await payload.findVersions({
          collection: 'services',
          where: {
            parent: {
              equals: service.id,
            },
          },
          limit: 10,
        })

        console.log(`      –í–µ—Ä—Å–∏–π: ${versions.totalDocs}`)
        
        if (versions.totalDocs > 0) {
          recordsWithVersions++
          versions.docs.forEach((version, index) => {
            console.log(`        ${index + 1}. Version ${version.version} (${version.status || 'no status'}) - ${version.createdAt}`)
          })
        } else {
          recordsWithoutVersions++
          recordsWithProblems.push({
            id: service.id,
            title: service.title,
            issue: '–ù–µ—Ç –≤–µ—Ä—Å–∏–π'
          })
        }

      } catch (error) {
        console.log(`      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏–π: ${error.message}`)
        recordsWithProblems.push({
          id: service.id,
          title: service.title,
          issue: `–û—à–∏–±–∫–∞ –≤–µ—Ä—Å–∏–π: ${error.message}`
        })
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å—å –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫
      try {
        const draftVersion = await payload.findByID({
          collection: 'services',
          id: service.id,
          draft: true,
        })
        console.log(`      Draft –¥–æ—Å—Ç—É–ø–µ–Ω: –î–∞ (Status: ${draftVersion.status})`)
      } catch (error) {
        console.log(`      Draft –¥–æ—Å—Ç—É–ø–µ–Ω: –ù–µ—Ç (${error.message})`)
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å API
    console.log('\nüåê 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ API:')
    
    try {
      // –≠–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
      const adminResponse = await payload.find({
        collection: 'services',
        limit: 100,
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
      })
      
      console.log(`   –ê–¥–º–∏–Ω API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: ${adminResponse.totalDocs} –∑–∞–ø–∏—Å–µ–π`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å draft: true
      const adminDraftResponse = await payload.find({
        collection: 'services',
        draft: true,
        limit: 100,
      })
      
      console.log(`   –ê–¥–º–∏–Ω API (—Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏): ${adminDraftResponse.totalDocs} –∑–∞–ø–∏—Å–µ–π`)
      
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∞–¥–º–∏–Ω API: ${error.message}`)
    }

    // 4. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä 4. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
    console.log(`   –ó–∞–ø–∏—Å–µ–π —Å –≤–µ—Ä—Å–∏—è–º–∏: ${recordsWithVersions}`)
    console.log(`   –ó–∞–ø–∏—Å–µ–π –±–µ–∑ –≤–µ—Ä—Å–∏–π: ${recordsWithoutVersions}`)
    console.log(`   –ó–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏: ${recordsWithProblems.length}`)

    if (recordsWithProblems.length > 0) {
      console.log('\n‚ùó –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–ø–∏—Å–∏:')
      recordsWithProblems.forEach((record, index) => {
        console.log(`   ${index + 1}. ${record.title} (${record.id}): ${record.issue}`)
      })
    }

    // 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüí° 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
    
    if (recordsWithoutVersions > 0) {
      console.log('   ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –±–µ–∑ –≤–µ—Ä—Å–∏–π - —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –ø—Ä–æ–±–ª–µ–º –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏')
      console.log('   üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –≤–µ—Ä—Å–∏–∏ –¥–ª—è —ç—Ç–∏—Ö –∑–∞–ø–∏—Å–µ–π')
    } else {
      console.log('   ‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ –∏–º–µ—é—Ç –≤–µ—Ä—Å–∏–∏')
    }

    console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
checkServicesVersions()
  .then(() => {
    console.log('\nüéâ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })

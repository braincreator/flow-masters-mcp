#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services
 */

const { MongoClient } = require('mongodb')

async function testDraftFunctionality() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services...\n')

  const client = new MongoClient('mongodb://127.0.0.1:27017/flow-masters')

  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n')

    const db = client.db('flow-masters')
    const servicesCollection = db.collection('services')
    const versionsCollection = db.collection('_services_versions')

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('üìä 1. –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏:')
    
    const totalServices = await servicesCollection.countDocuments()
    console.log(`   –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è services: ${totalServices} –∑–∞–ø–∏—Å–µ–π`)

    const totalVersions = await versionsCollection.countDocuments()
    console.log(`   –ö–æ–ª–ª–µ–∫—Ü–∏—è versions: ${totalVersions} –∑–∞–ø–∏—Å–µ–π`)

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ _status –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const statusStats = await servicesCollection.aggregate([
      {
        $group: {
          _id: '$_status',
          count: { $sum: 1 }
        }
      },
      { $sort: { count: -1 } }
    ]).toArray()

    console.log('\n   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ _status –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏:')
    statusStats.forEach(stat => {
      console.log(`     ${stat._id || 'undefined'}: ${stat.count}`)
    })

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ businessStatus
    const businessStatusStats = await servicesCollection.aggregate([
      {
        $group: {
          _id: '$businessStatus',
          count: { $sum: 1 }
        }
      },
      { $sort: { count: -1 } }
    ]).toArray()

    console.log('\n   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ businessStatus:')
    businessStatusStats.forEach(stat => {
      console.log(`     ${stat._id || 'undefined'}: ${stat.count}`)
    })

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏
    console.log('\nüìã 2. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø–∏—Å–∏ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏:')
    const sampleService = await servicesCollection.findOne()
    if (sampleService) {
      console.log(`   ID: ${sampleService._id}`)
      console.log(`   Title: ${typeof sampleService.title === 'object' ? JSON.stringify(sampleService.title) : sampleService.title}`)
      console.log(`   _status: ${sampleService._status}`)
      console.log(`   businessStatus: ${sampleService.businessStatus}`)
      console.log(`   status (—Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ): ${sampleService.status}`)
      console.log(`   createdAt: ${sampleService.createdAt}`)
      console.log(`   updatedAt: ${sampleService.updatedAt}`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è
      const fields = Object.keys(sampleService)
      console.log(`   –í—Å–µ–≥–æ –ø–æ–ª–µ–π: ${fields.length}`)
      console.log(`   –ü–æ–ª—è: ${fields.slice(0, 10).join(', ')}${fields.length > 10 ? '...' : ''}`)
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å versions
    console.log('\nüîÑ 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π:')
    
    const collections = await db.listCollections().toArray()
    const versionCollections = collections.filter(col => 
      col.name.includes('version') && col.name.includes('service')
    )
    
    console.log('   –ö–æ–ª–ª–µ–∫—Ü–∏–∏ versions –¥–ª—è services:')
    for (const col of versionCollections) {
      const count = await db.collection(col.name).countDocuments()
      console.log(`     ${col.name}: ${count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`)
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    console.log('\nüìá 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤:')
    
    const servicesIndexes = await servicesCollection.indexes()
    console.log(`   –ò–Ω–¥–µ–∫—Å—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services: ${servicesIndexes.length}`)
    servicesIndexes.forEach(index => {
      console.log(`     - ${index.name}: ${JSON.stringify(index.key)}`)
    })

    const versionsIndexes = await versionsCollection.indexes()
    console.log(`   –ò–Ω–¥–µ–∫—Å—ã –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ _services_versions: ${versionsIndexes.length}`)
    versionsIndexes.forEach(index => {
      console.log(`     - ${index.name}: ${JSON.stringify(index.key)}`)
    })

    // 5. –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞ (—á–µ—Ä–µ–∑ –ø—Ä—è–º—É—é –≤—Å—Ç–∞–≤–∫—É –≤ versions)
    console.log('\nüß™ 5. –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞:')
    
    if (sampleService) {
      const draftData = {
        parent: sampleService._id,
        version: {
          ...sampleService,
          _status: 'draft',
          title: typeof sampleService.title === 'object' 
            ? { ...sampleService.title, ru: sampleService.title.ru + ' (–ß–µ—Ä–Ω–æ–≤–∏–∫)' }
            : sampleService.title + ' (–ß–µ—Ä–Ω–æ–≤–∏–∫)',
          businessStatus: 'active'
        },
        autosave: false,
        createdAt: new Date(),
        updatedAt: new Date()
      }

      // –£–¥–∞–ª—è–µ–º _id –∏–∑ version, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
      delete draftData.version._id

      try {
        const insertResult = await versionsCollection.insertOne(draftData)
        console.log(`   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ–∑–¥–∞–Ω: ${insertResult.insertedId}`)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ–∑–¥–∞–ª—Å—è
        const draftCount = await versionsCollection.countDocuments()
        console.log(`   –¢–µ–ø–µ—Ä—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ versions: ${draftCount} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`)
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫
        await versionsCollection.deleteOne({ _id: insertResult.insertedId })
        console.log(`   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫ —É–¥–∞–ª–µ–Ω`)
        
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: ${error.message}`)
      }
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    console.log('\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:')
    console.log('   - –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')
    console.log('   - –í—Å–µ –∑–∞–ø–∏—Å–∏ –∏–º–µ—é—Ç _status = "published"')
    console.log('   - –í—Å–µ –∑–∞–ø–∏—Å–∏ –∏–º–µ—é—Ç businessStatus = "active"')
    console.log('   - –ö–æ–ª–ª–µ–∫—Ü–∏—è versions –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ')
    console.log('   - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')
    console.log('\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')
    console.log('   2. –ó–∞–π—Ç–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å')
    console.log('   3. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ —É—Å–ª—É–≥–∏')
    console.log('   4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —á–µ—Ä–Ω–æ–≤–∏–∫ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await client.close()
  }
}

testDraftFunctionality()

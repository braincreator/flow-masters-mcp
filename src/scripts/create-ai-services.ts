#!/usr/bin/env tsx

/**
 * Script to create AI Agency services for testing
 * Run with: npx tsx src/scripts/create-ai-services.ts
 */

import { getPayloadClient } from '@/utilities/payload/index'

const aiServices = [
  {
    title: '–ò–ò-–∞–≥–µ–Ω—Ç—ã –ø–æ–¥ –∫–ª—é—á',
    serviceType: 'automation',
    shortDescription: '–£–º–Ω—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
    description: {
      root: {
        type: 'root',
        children: [
          {
            type: 'paragraph',
            version: 1,
            children: [
              {
                type: 'text',
                version: 1,
                text: '–°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –≤ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ.'
              }
            ]
          }
        ],
        direction: null,
        format: '',
        indent: 0,
        version: 1
      }
    },
    price: 150000,
    isPriceStartingFrom: true,
    duration: 2160, // 36 —á–∞—Å–æ–≤ = 3-6 –Ω–µ–¥–µ–ª—å
    status: 'published',
    slug: 'ai-agents-turnkey'
  },
  {
    title: '–ß–∞—Ç-–±–æ—Ç—ã —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏',
    serviceType: 'development',
    shortDescription: 'Telegram, WhatsApp, Web - –≤–µ–∑–¥–µ, –≥–¥–µ –≤–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã',
    description: {
      root: {
        type: 'root',
        children: [
          {
            type: 'paragraph',
            version: 1,
            children: [
              {
                type: 'text',
                version: 1,
                text: '–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–º–Ω—ã—Ö —á–∞—Ç-–±–æ—Ç–æ–≤ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –¥–ª—è –≤—Å–µ—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º.'
              }
            ]
          }
        ],
        direction: null,
        format: '',
        indent: 0,
        version: 1
      }
    },
    price: 80000,
    isPriceStartingFrom: true,
    duration: 1440, // 24 —á–∞—Å–∞ = 2-3 –Ω–µ–¥–µ–ª–∏
    status: 'published',
    slug: 'ai-chatbots'
  },
  {
    title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ò–ò –≤ –ø—Ä–æ—Ü–µ—Å—Å—ã',
    serviceType: 'integration',
    shortDescription: '–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–∏—Å—Ç–µ–º—ã',
    description: {
      root: {
        type: 'root',
        children: [
          {
            type: 'paragraph',
            version: 1,
            children: [
              {
                type: 'text',
                version: 1,
                text: '–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –ò–ò-—Ä–µ—à–µ–Ω–∏—è –≤ –≤–∞—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Å–∏—Å—Ç–µ–º—ã.'
              }
            ]
          }
        ],
        direction: null,
        format: '',
        indent: 0,
        version: 1
      }
    },
    price: 200000,
    isPriceStartingFrom: true,
    duration: 2880, // 48 —á–∞—Å–æ–≤ = 4-8 –Ω–µ–¥–µ–ª—å
    status: 'published',
    slug: 'ai-integration'
  },
  {
    title: '–ê—É–¥–∏—Ç –∏ –ø–æ–∏—Å–∫ —Ç–æ—á–µ–∫ –¥–ª—è –ò–ò',
    serviceType: 'audit',
    shortDescription: '–ù–∞—Ö–æ–¥–∏–º, –≥–¥–µ –ò–ò –ø—Ä–∏–Ω–µ—Å–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã–≥–æ–¥—É',
    description: {
      root: {
        type: 'root',
        children: [
          {
            type: 'paragraph',
            version: 1,
            children: [
              {
                type: 'text',
                version: 1,
                text: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞—É–¥–∏—Ç –≤–∞—à–∏—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è —Ç–æ—á–µ–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ò–ò.'
              }
            ]
          }
        ],
        direction: null,
        format: '',
        indent: 0,
        version: 1
      }
    },
    price: 0,
    isPriceStartingFrom: false,
    duration: 480, // 8 —á–∞—Å–æ–≤ = 3-7 –¥–Ω–µ–π
    status: 'published',
    slug: 'ai-audit-free'
  },
  {
    title: '–ê–≤—Ç–æ–≤–æ—Ä–æ–Ω–∫–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è',
    serviceType: 'automation',
    shortDescription: '–£–º–Ω—ã–µ –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
    description: {
      root: {
        type: 'root',
        children: [
          {
            type: 'paragraph',
            version: 1,
            children: [
              {
                type: 'text',
                version: 1,
                text: '–°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂ —Å –ò–ò-–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π.'
              }
            ]
          }
        ],
        direction: null,
        format: '',
        indent: 0,
        version: 1
      }
    },
    price: 120000,
    isPriceStartingFrom: true,
    duration: 960, // 16 —á–∞—Å–æ–≤ = 10-14 –¥–Ω–µ–π
    status: 'published',
    slug: 'ai-sales-funnels'
  },
  {
    title: '–ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏',
    serviceType: 'consultation',
    shortDescription: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò–ò',
    description: {
      root: {
        type: 'root',
        children: [
          {
            type: 'paragraph',
            version: 1,
            children: [
              {
                type: 'text',
                version: 1,
                text: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò –≤ –≤–∞—à –±–∏–∑–Ω–µ—Å.'
              }
            ]
          }
        ],
        direction: null,
        format: '',
        indent: 0,
        version: 1
      }
    },
    price: 15000,
    isPriceStartingFrom: false,
    duration: 60, // 1 —á–∞—Å
    status: 'published',
    slug: 'ai-consultation'
  }
]

async function createAIServices() {
  console.log('ü§ñ Creating AI Agency services...')
  
  try {
    const payload = await getPayloadClient()
    console.log('‚úÖ Payload client initialized')

    for (const serviceData of aiServices) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —É—Å–ª—É–≥–∞ —Å —Ç–∞–∫–∏–º slug
        const existing = await payload.find({
          collection: 'services',
          where: {
            slug: {
              equals: serviceData.slug
            }
          },
          limit: 1
        })

        if (existing.docs.length > 0) {
          console.log(`‚ö†Ô∏è  Service "${serviceData.title}" already exists, skipping...`)
          continue
        }

        // –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥—É
        const service = await payload.create({
          collection: 'services',
          data: serviceData
        })

        console.log(`‚úÖ Created service: ${service.title} (${service.id})`)
      } catch (error) {
        console.error(`‚ùå Error creating service "${serviceData.title}":`, error)
      }
    }

    console.log('üéâ AI Agency services creation completed!')
  } catch (error) {
    console.error('‚ùå Error:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
createAIServices()

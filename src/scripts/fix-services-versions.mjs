#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–π –∑–∞–ø–∏—Å–µ–π services
 * –°–æ–∑–¥–∞–µ—Ç –≤–µ—Ä—Å–∏–∏ –¥–ª—è –∑–∞–ø–∏—Å–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –Ω–∞–ø—Ä—è–º—É—é –≤ MongoDB
 */

import { getPayload } from 'payload'
import configPromise from '../../src/payload.config.ts'

async function fixServicesVersions() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π –∑–∞–ø–∏—Å–µ–π services...\n')

  try {
    const payload = await getPayload({ config: configPromise })
    console.log('‚úÖ Payload –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n')

    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ services
    console.log('üìã 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π services:')
    const allServices = await payload.find({
      collection: 'services',
      limit: 100,
    })

    console.log(`   –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${allServices.totalDocs}`)

    let fixedCount = 0
    let errorCount = 0

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
    for (const service of allServices.docs) {
      console.log(`\nüìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${service.title} (ID: ${service.id})`)

      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–µ—Ä—Å–∏–∏ —É –∑–∞–ø–∏—Å–∏
        const versions = await payload.findVersions({
          collection: 'services',
          where: {
            parent: {
              equals: service.id,
            },
          },
          limit: 1,
        })

        if (versions.totalDocs === 0) {
          console.log(`   ‚ö†Ô∏è  –ù–µ—Ç –≤–µ—Ä—Å–∏–π - —Å–æ–∑–¥–∞–µ–º –≤–µ—Ä—Å–∏—é`)

          // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è richText –ø–æ–ª—è description
          let description = service.description
          if (!description || typeof description === 'string') {
            // –ï—Å–ª–∏ description –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π, —Å–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            description = {
              root: {
                type: 'root',
                children: [
                  {
                    type: 'paragraph',
                    version: 1,
                    children: [
                      {
                        type: 'text',
                        version: 1,
                        text: service.shortDescription || service.title || '–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏',
                      },
                    ],
                  },
                ],
                direction: null,
                format: '',
                indent: 0,
                version: 1,
              },
            }
          }

          // –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ Payload API, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –≤–µ—Ä—Å–∏—é
          const updatedService = await payload.update({
            collection: 'services',
            id: service.id,
            data: {
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
              title: service.title,
              serviceType: service.serviceType,
              description: description,
              shortDescription: service.shortDescription,
              price: service.price,
              isPriceStartingFrom: service.isPriceStartingFrom,
              duration: service.duration,
              thumbnail: service.thumbnail,
              features: service.features || [],
              gallery: service.gallery || [],
              requiresBooking: service.requiresBooking || false,
              bookingSettings: service.bookingSettings || {
                provider: 'calendly',
                hideEventTypeDetails: true,
                hideGdprBanner: true,
                enableAdditionalInfo: false,
                additionalInfoRequired: false,
                additionalInfoFields: [],
              },
              requiresPayment: service.requiresPayment !== false, // default true
              paymentSettings: service.paymentSettings || {
                paymentType: 'full_prepayment',
                prepaymentPercentage: 100,
              },
              status: service.status || 'published',
              publishedAt: service.publishedAt || new Date().toISOString(),
              meta: service.meta || {},
              slug: service.slug,
            },
          })

          console.log(`   ‚úÖ –í–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è: ${updatedService.title}`)
          fixedCount++
        } else {
          console.log(`   ‚úÖ –í–µ—Ä—Å–∏–∏ —É–∂–µ –µ—Å—Ç—å (${versions.totalDocs})`)
        }
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${error.message}`)
        errorCount++
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüîç 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:')

    let totalWithVersions = 0
    let totalWithoutVersions = 0

    for (const service of allServices.docs) {
      try {
        const versions = await payload.findVersions({
          collection: 'services',
          where: {
            parent: {
              equals: service.id,
            },
          },
          limit: 1,
        })

        if (versions.totalDocs > 0) {
          totalWithVersions++
        } else {
          totalWithoutVersions++
        }
      } catch (error) {
        totalWithoutVersions++
      }
    }

    console.log(`   –ó–∞–ø–∏—Å–µ–π —Å –≤–µ—Ä—Å–∏—è–º–∏: ${totalWithVersions}`)
    console.log(`   –ó–∞–ø–∏—Å–µ–π –±–µ–∑ –≤–µ—Ä—Å–∏–π: ${totalWithoutVersions}`)

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å API
    console.log('\nüåê 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ API:')

    try {
      const adminResponse = await payload.find({
        collection: 'services',
        limit: 100,
      })

      console.log(`   –û–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å: ${adminResponse.totalDocs} –∑–∞–ø–∏—Å–µ–π`)

      const adminDraftResponse = await payload.find({
        collection: 'services',
        draft: true,
        limit: 100,
      })

      console.log(`   –° —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏: ${adminDraftResponse.totalDocs} –∑–∞–ø–∏—Å–µ–π`)
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ API: ${error.message}`)
    }

    // 5. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä 5. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
    console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${fixedCount}`)
    console.log(`   –û—à–∏–±–æ–∫: ${errorCount}`)
    console.log(`   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${allServices.totalDocs}`)

    if (totalWithoutVersions === 0) {
      console.log('\nüéâ –í—Å–µ –∑–∞–ø–∏—Å–∏ —Ç–µ–ø–µ—Ä—å –∏–º–µ—é—Ç –≤–µ—Ä—Å–∏–∏!')
      console.log('üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: http://localhost:3000/admin/collections/services')
    } else {
      console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –≤—Å–µ –µ—â–µ –±–µ–∑ –≤–µ—Ä—Å–∏–π')
    }

    console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:', error)
    process.exit(1)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fixServicesVersions()
  .then(() => {
    console.log('\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })

#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ sitemap
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
 */

const { execSync } = require('child_process')
const fs = require('fs')
const path = require('path')

console.log('üó∫Ô∏è  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap...')

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω
  const buildDir = path.join(process.cwd(), '.next')
  if (!fs.existsSync(buildDir)) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –ü—Ä–æ–µ–∫—Ç –Ω–µ —Å–æ–±—Ä–∞–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ "npm run build"')
    process.exit(1)
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ sitemap
  const configPath = path.join(process.cwd(), 'next-sitemap.config.cjs')
  if (!fs.existsSync(configPath)) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª next-sitemap.config.cjs –Ω–µ –Ω–∞–π–¥–µ–Ω')
    process.exit(1)
  }

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º sitemap
  console.log('üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap —Ñ–∞–π–ª–æ–≤...')
  
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É next-sitemap
    execSync('npx next-sitemap --config next-sitemap.config.cjs', {
      stdio: 'inherit',
      cwd: process.cwd()
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ sitemap:', error.message)
    
    // –ï—Å–ª–∏ next-sitemap –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å
    console.log('üì¶ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ next-sitemap...')
    try {
      execSync('npm install next-sitemap --save-dev', { stdio: 'inherit' })
      execSync('npx next-sitemap --config next-sitemap.config.cjs', { stdio: 'inherit' })
    } catch (installError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å next-sitemap:', installError.message)
      process.exit(1)
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã
  const publicDir = path.join(process.cwd(), 'public')
  const sitemapFiles = [
    'sitemap.xml',
    'robots.txt'
  ]

  let allFilesExist = true
  sitemapFiles.forEach(file => {
    const filePath = path.join(publicDir, file)
    if (fs.existsSync(filePath)) {
      console.log(`‚úÖ ${file} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`)
    } else {
      console.log(`‚ö†Ô∏è  ${file} –Ω–µ –Ω–∞–π–¥–µ–Ω`)
      allFilesExist = false
    }
  })

  if (allFilesExist) {
    console.log('üéâ Sitemap —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!')
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
    const sitemapPath = path.join(publicDir, 'sitemap.xml')
    if (fs.existsSync(sitemapPath)) {
      const stats = fs.statSync(sitemapPath)
      console.log(`üìä –†–∞–∑–º–µ—Ä sitemap.xml: ${(stats.size / 1024).toFixed(2)} KB`)
    }
  } else {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã sitemap –Ω–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã')
  }

  // –í—ã–≤–æ–¥–∏–º URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const baseUrl = process.env.NEXT_PUBLIC_SERVER_URL || 'http://localhost:3000'
  console.log('\nüîó URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:')
  console.log(`   Sitemap: ${baseUrl}/sitemap.xml`)
  console.log(`   Robots:  ${baseUrl}/robots.txt`)
  console.log(`   Pages:   ${baseUrl}/pages-sitemap.xml`)
  console.log(`   Posts:   ${baseUrl}/posts-sitemap.xml`)
  console.log(`   Services: ${baseUrl}/services-sitemap.xml`)

} catch (error) {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ sitemap:', error.message)
  process.exit(1)
}

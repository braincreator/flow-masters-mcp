const { MongoClient } = require('mongodb');

const uri = 'mongodb://localhost:27017/flow-masters';

async function checkServices() {
  const client = new MongoClient(uri);
  try {
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    const db = client.db('flow-masters');
    const services = await db.collection('services').find({}).limit(10).toArray();
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥: ${services.length}`);
    
    services.forEach((service, index) => {
      const title = typeof service.title === 'object' ? (service.title.ru || service.title.en) : service.title;
      console.log(`\nüîç –£—Å–ª—É–≥–∞ ${index + 1}: ${title}`);
      console.log(`   - serviceType: ${service.serviceType}`);
      console.log(`   - –ï—Å—Ç—å features: ${!!service.features && service.features.length > 0}`);
      console.log(`   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ features: ${service.features ? service.features.length : 0}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º description vs shortDescription
      const descRu = service.description?.ru?.root?.children?.[0]?.children?.[0]?.text || '';
      const shortDescRu = service.shortDescription?.ru || '';
      const isSimilar = descRu.length > 0 && shortDescRu.length > 0 && 
                       descRu.substring(0, Math.min(50, descRu.length)) === shortDescRu.substring(0, Math.min(50, shortDescRu.length));
      
      console.log(`   - Description –ø–æ—Ö–æ–∂ –Ω–∞ shortDescription: ${isSimilar}`);
      console.log(`   - Description –¥–ª–∏–Ω–∞: ${descRu.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      console.log(`   - ShortDescription –¥–ª–∏–Ω–∞: ${shortDescRu.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      
      if (descRu.length > 0) {
        console.log(`   - Description –Ω–∞—á–∞–ª–æ: "${descRu.substring(0, 100)}..."`);
      }
      if (shortDescRu.length > 0) {
        console.log(`   - ShortDescription: "${shortDescRu}"`);
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await client.close();
  }
}

checkServices();

#!/usr/bin/env node

/**
 * Script to fix subscription plans with proper localization
 * Run with: node scripts/fix-subscription-plans.mjs
 */

const API_BASE = 'http://localhost:3001'

// –î–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω–æ–≤ —É—Å–ª—É–≥ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π
const subscriptionPlans = [
  {
    name: {
      ru: '–°—Ç–∞—Ä—Ç–µ—Ä',
      en: 'Starter',
    },
    description: {
      ru: '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ —Å –ò–ò. –ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.',
      en: 'Perfect for small businesses starting with AI. Basic toolkit for automating simple processes.',
    },
    features: {
      ru: [
        { feature: '–ß–∞—Ç-–±–æ—Ç –¥–ª—è –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã' },
        { feature: '–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM' },
        { feature: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 30 –¥–Ω–µ–π' },
        { feature: '–û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (2 —á–∞—Å–∞)' },
        { feature: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏' },
      ],
      en: [
        { feature: 'Chatbot for one platform' },
        { feature: 'Basic CRM integration' },
        { feature: '30 days technical support' },
        { feature: 'Team training (2 hours)' },
        { feature: 'Documentation and instructions' },
      ],
    },
    price: {
      ru: 80000,
      en: 889,
    },
    currency: {
      ru: 'RUB',
      en: 'USD',
    },
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 0,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    isPopular: false,
    metadata: {
      category: 'ai-agency',
      level: 'starter',
      prepaymentPercentage: 50,
      targetAudience: 'small-business',
    },
  },
  {
    name: {
      ru: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
      en: 'Professional',
    },
    description: {
      ru: '–î–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π, –≥–æ—Ç–æ–≤—ã—Ö –∫ —Å–µ—Ä—å–µ–∑–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ò–ò –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.',
      en: 'For growing companies ready for serious automation. Advanced AI capabilities and integrations.',
    },
    features: {
      ru: [
        { feature: '–ß–∞—Ç-–±–æ—Ç—ã –¥–ª—è 3 –ø–ª–∞—Ç—Ñ–æ—Ä–º' },
        { feature: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM/ERP' },
        { feature: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞' },
        { feature: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã' },
        { feature: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 90 –¥–Ω–µ–π' },
        { feature: '–û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (8 —á–∞—Å–æ–≤)' },
        { feature: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤' },
      ],
      en: [
        { feature: 'Chatbots for 3 platforms' },
        { feature: 'Advanced CRM/ERP integration' },
        { feature: 'Email marketing automation' },
        { feature: 'Analytics and reports' },
        { feature: '90 days technical support' },
        { feature: 'Team training (8 hours)' },
        { feature: 'Process setup' },
      ],
    },
    price: {
      ru: 150000,
      en: 1667,
    },
    currency: {
      ru: 'RUB',
      en: 'USD',
    },
    period: 'monthly',
    trialPeriodDays: 7,
    maxSubscriptionMonths: 0,
    autoRenew: true,
    allowCancel: true,
    isActive: true,
    isPopular: true,
    metadata: {
      category: 'ai-agency',
      level: 'professional',
      prepaymentPercentage: 30,
      targetAudience: 'medium-business',
    },
  },
  {
    name: {
      ru: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π',
      en: 'Enterprise',
    },
    description: {
      ru: '–ü–æ–ª–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞.',
      en: 'Complete solution for large organizations. Maximum automation, custom development and priority support.',
    },
    features: {
      ru: [
        { feature: '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —á–∞—Ç-–±–æ—Ç—ã –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏' },
        { feature: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ò–ò-—Ä–µ—à–µ–Ω–∏–π' },
        { feature: '–ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤' },
        { feature: '–í—ã–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞' },
        { feature: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7' },
        { feature: '–û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (40 —á–∞—Å–æ–≤)' },
        { feature: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ò–ò' },
        { feature: 'SLA –≥–∞—Ä–∞–Ω—Ç–∏–∏' },
      ],
      en: [
        { feature: 'Unlimited chatbots and integrations' },
        { feature: 'Custom AI solution development' },
        { feature: 'Complete business process automation' },
        { feature: 'Dedicated project manager' },
        { feature: 'Priority 24/7 technical support' },
        { feature: 'Team training (40 hours)' },
        { feature: 'AI strategy consultations' },
        { feature: 'SLA guarantees' },
      ],
    },
    price: {
      ru: 300000,
      en: 3333,
    },
    currency: {
      ru: 'RUB',
      en: 'USD',
    },
    period: 'monthly',
    trialPeriodDays: 14,
    maxSubscriptionMonths: 0,
    autoRenew: true,
    allowCancel: true,
    isActive: true,
    isPopular: false,
    metadata: {
      category: 'ai-agency',
      level: 'enterprise',
      prepaymentPercentage: 20,
      targetAudience: 'large-business',
    },
  },
  {
    name: {
      ru: '–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –ë–∞–∑–æ–≤—ã–π',
      en: 'Basic Consulting',
    },
    description: {
      ru: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ò–ò –≤ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ. –ê–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.',
      en: 'Consulting services to understand AI opportunities in your business. Analysis and recommendations.',
    },
    features: {
      ru: [
        { feature: '–ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–¥–æ 5 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)' },
        { feature: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò–ò' },
        { feature: 'ROI-—Ä–∞—Å—á–µ—Ç—ã' },
        { feature: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ' },
        { feature: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤' },
      ],
      en: [
        { feature: 'Business process analysis (up to 5 processes)' },
        { feature: 'AI implementation recommendations' },
        { feature: 'ROI calculations' },
        { feature: 'Technical specification' },
        { feature: 'Results presentation' },
      ],
    },
    price: {
      ru: 45000,
      en: 500,
    },
    currency: {
      ru: 'RUB',
      en: 'USD',
    },
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 1,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    isPopular: false,
    metadata: {
      category: 'consulting',
      level: 'basic',
      prepaymentPercentage: 100,
      targetAudience: 'all',
    },
  },
  {
    name: {
      ru: '–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –ü—Ä–µ–º–∏—É–º',
      en: 'Premium Consulting',
    },
    description: {
      ru: '–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞.',
      en: 'In-depth consulting with AI implementation strategy development and project support.',
    },
    features: {
      ru: [
        { feature: '–ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –≤—Å–µ—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤' },
        { feature: '–°—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤' },
        { feature: '–î–µ—Ç–∞–ª—å–Ω—ã–µ ROI-—Ä–∞—Å—á–µ—Ç—ã' },
        { feature: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ + –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞' },
        { feature: '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ 3 –º–µ—Å—è—Ü–∞' },
        { feature: '–û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã' },
      ],
      en: [
        { feature: 'Complete audit of all business processes' },
        { feature: '12-month AI implementation strategy' },
        { feature: 'Detailed ROI calculations' },
        { feature: 'Technical specification + architecture' },
        { feature: '3 months project support' },
        { feature: 'Team training' },
      ],
    },
    price: {
      ru: 120000,
      en: 1333,
    },
    currency: {
      ru: 'RUB',
      en: 'USD',
    },
    period: 'monthly',
    trialPeriodDays: 0,
    maxSubscriptionMonths: 3,
    autoRenew: false,
    allowCancel: true,
    isActive: true,
    isPopular: true,
    metadata: {
      category: 'consulting',
      level: 'premium',
      prepaymentPercentage: 50,
      targetAudience: 'medium-large-business',
    },
  },
]

async function clearExistingPlans() {
  console.log('üóëÔ∏è  Clearing existing subscription plans...')

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–ª–∞–Ω—ã
    const response = await fetch(`${API_BASE}/api/subscription-plans?limit=100`)
    if (!response.ok) {
      throw new Error(`Failed to fetch plans: ${response.statusText}`)
    }

    const data = await response.json()
    const plans = data.docs || []

    // –£–¥–∞–ª—è–µ–º –ø–ª–∞–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å–æ–∑–¥–∞–ª–∏ (—Å metadata.locale)
    for (const plan of plans) {
      if (
        plan.metadata &&
        (plan.metadata.locale ||
          plan.metadata.category === 'ai-agency' ||
          plan.metadata.category === 'consulting')
      ) {
        try {
          const deleteResponse = await fetch(`${API_BASE}/api/subscription-plans/${plan.id}`, {
            method: 'DELETE',
          })

          if (deleteResponse.ok) {
            console.log(`‚úÖ Deleted plan: ${plan.name} (${plan.id})`)
          } else {
            console.error(`‚ùå Failed to delete plan: ${plan.name}`)
          }
        } catch (error) {
          console.error(`‚ùå Error deleting plan ${plan.name}:`, error.message)
        }
      }
    }
  } catch (error) {
    console.error('‚ùå Error clearing plans:', error.message)
  }
}

async function createLocalizedPlans() {
  console.log('üöÄ Creating properly localized subscription plans...')

  try {
    for (const planData of subscriptionPlans) {
      try {
        console.log(`Creating plan: ${planData.name.ru}/${planData.name.en}...`)

        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω –¥–ª—è —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª–∏ —Å–Ω–∞—á–∞–ª–∞
        const ruResponse = await fetch(`${API_BASE}/api/subscription-plans?locale=ru`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            name: planData.name.ru,
            description: planData.description.ru,
            features: planData.features.ru,
            price: planData.price.ru,
            currency: planData.currency.ru,
            period: planData.period,
            trialPeriodDays: planData.trialPeriodDays,
            maxSubscriptionMonths: planData.maxSubscriptionMonths,
            autoRenew: planData.autoRenew,
            allowCancel: planData.allowCancel,
            isActive: planData.isActive,
            isPopular: planData.isPopular,
            metadata: planData.metadata,
          }),
        })

        if (ruResponse.ok) {
          const ruResult = await ruResponse.json()
          const planId = ruResult.doc?.id
          console.log(`‚úÖ Created RU plan: ${planData.name.ru} (ID: ${planId})`)

          // –¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–ª—è–µ–º –ø–ª–∞–Ω –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–π –ª–æ–∫–∞–ª–∏
          const enResponse = await fetch(`${API_BASE}/api/subscription-plans/${planId}?locale=en`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              name: planData.name.en,
              description: planData.description.en,
              features: planData.features.en,
              price: planData.price.en,
              currency: planData.currency.en,
            }),
          })

          if (enResponse.ok) {
            console.log(`‚úÖ Updated EN plan: ${planData.name.en}`)
          } else {
            const enError = await enResponse.text()
            console.error(`‚ùå Error updating EN plan ${planData.name.en}:`, enError)
          }
        } else {
          const error = await ruResponse.text()
          console.error(`‚ùå Error creating plan ${planData.name.ru}:`, error)
        }
      } catch (error) {
        console.error(`‚ùå Error processing plan ${planData.name.ru}:`, error.message)
      }
    }

    console.log('üéâ All subscription plans processed!')
  } catch (error) {
    console.error('üí• Error:', error)
    process.exit(1)
  }
}

async function main() {
  await clearExistingPlans()
  await createLocalizedPlans()
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main()

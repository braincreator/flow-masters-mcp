#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ Flow Masters
 */

const fs = require('fs')
const path = require('path')

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ Flow Masters...\n')

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const requiredFiles = [
  {
    path: 'public/favicon.svg',
    description: '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π SVG favicon',
    checkContent: (content) => content.includes('Flow Masters') || content.includes('robot')
  },
  {
    path: 'public/favicon.ico',
    description: 'ICO favicon –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤',
    checkContent: () => true // –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª
  },
  {
    path: 'public/icon.svg',
    description: 'Apple Touch Icon (SVG)',
    checkContent: (content) => content.includes('robot')
  },
  {
    path: 'public/og-image.jpg',
    description: 'OpenGraph –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π',
    checkContent: () => true // –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª
  },
  {
    path: 'public/logo.png',
    description: '–û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–æ—Ç–∏–ø Flow Masters',
    checkContent: () => true // –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª
  }
]

// SEO —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const seoFiles = [
  {
    path: 'src/utilities/generateMeta.ts',
    description: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö',
    checkContent: (content) => content.includes('Flow Masters') && !content.includes('Payload Website Template')
  },
  {
    path: 'src/utilities/mergeOpenGraph.ts',
    description: 'OpenGraph –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
    checkContent: (content) => content.includes('Flow Masters') && content.includes('og-image.jpg')
  },
  {
    path: 'src/utilities/metadata.ts',
    description: '–ë–∞–∑–æ–≤—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ',
    checkContent: (content) => content.includes('Flow Masters')
  }
]

let totalIssues = 0
let checkedFiles = 0

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Ä–µ—Å—É—Ä—Å–æ–≤:\n')

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã —Ä–µ—Å—É—Ä—Å–æ–≤
requiredFiles.forEach(({ path: filePath, description, checkContent }) => {
  checkedFiles++
  const fullPath = path.join(process.cwd(), filePath)
  
  if (!fs.existsSync(fullPath)) {
    console.log(`‚ùå ${filePath} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`)
    console.log(`   ${description}`)
    totalIssues++
    return
  }

  const stats = fs.statSync(fullPath)
  const fileSizeKB = Math.round(stats.size / 1024)
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
  if (filePath.endsWith('.svg')) {
    try {
      const content = fs.readFileSync(fullPath, 'utf8')
      if (!checkContent(content)) {
        console.log(`‚ö†Ô∏è  ${filePath} - —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º`)
        totalIssues++
      } else {
        console.log(`‚úÖ ${filePath} - OK (${fileSizeKB} KB)`)
      }
    } catch (error) {
      console.log(`‚ùå ${filePath} - –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: ${error.message}`)
      totalIssues++
    }
  } else {
    console.log(`‚úÖ ${filePath} - OK (${fileSizeKB} KB)`)
  }
  
  console.log(`   ${description}`)
  console.log('')
})

console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ SEO —Ñ–∞–π–ª–æ–≤:\n')

// –ü—Ä–æ–≤–µ—Ä—è–µ–º SEO —Ñ–∞–π–ª—ã
seoFiles.forEach(({ path: filePath, description, checkContent }) => {
  checkedFiles++
  const fullPath = path.join(process.cwd(), filePath)
  
  if (!fs.existsSync(fullPath)) {
    console.log(`‚ùå ${filePath} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`)
    totalIssues++
    return
  }

  try {
    const content = fs.readFileSync(fullPath, 'utf8')
    if (!checkContent(content)) {
      console.log(`‚ö†Ô∏è  ${filePath} - —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏`)
      totalIssues++
    } else {
      console.log(`‚úÖ ${filePath} - OK`)
    }
  } catch (error) {
    console.log(`‚ùå ${filePath} - –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: ${error.message}`)
    totalIssues++
  }
  
  console.log(`   ${description}`)
  console.log('')
})

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
console.log('üìê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:\n')

if (fs.existsSync('public/og-image.jpg')) {
  const stats = fs.statSync('public/og-image.jpg')
  const fileSizeKB = Math.round(stats.size / 1024)
  
  if (fileSizeKB > 500) {
    console.log(`‚ö†Ô∏è  OG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ: ${fileSizeKB} KB (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è < 500 KB)`)
    totalIssues++
  } else {
    console.log(`‚úÖ OG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞: ${fileSizeKB} KB`)
  }
} else {
  console.log(`‚ùå OG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`)
  totalIssues++
}

// –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
console.log('\nüìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:')
console.log(`   üìÅ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${checkedFiles}`)
console.log(`   ${totalIssues === 0 ? '‚úÖ' : '‚ùå'} –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: ${totalIssues}`)

if (totalIssues === 0) {
  console.log('\nüéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã Flow Masters –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
  console.log('\n‚úÖ –ì–æ—Ç–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã:')
  console.log('   üé® Favicon (SVG + ICO)')
  console.log('   üì± Apple Touch Icon')
  console.log('   üñºÔ∏è  OpenGraph –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (1200x630)')
  console.log('   üîç SEO –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ')
  console.log('   üåê –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è (EN/RU)')
  
  console.log('\nüöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
  console.log('   ‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ favicon –≤ —Ä–∞–∑–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö')
  console.log('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ OG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö')
  console.log('   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ SEO –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã')
} else {
  console.log('\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏')
  console.log('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã')
}

console.log('\nüìã –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:')
requiredFiles.concat(seoFiles).forEach(({ path: filePath }) => {
  const exists = fs.existsSync(filePath)
  console.log(`   ${exists ? '‚úÖ' : '‚ùå'} ${filePath}`)
})

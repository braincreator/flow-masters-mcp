version: '3.8'

services:
  payload:
    image: node:20-alpine
    container_name: flow-masters-payload
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    tty: true
    stdin_open: true
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DATABASE_URI=mongodb://mongodb:27017/flow-masters
    networks:
      - app-network
    restart: always

  mongodb:
    image: mongo:latest
    container_name: flow-masters-mongodb
    ports:
      - '27017:27017'
    command:
      - --storageEngine=wiredTiger
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=flow-masters
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    container_name: flow-masters-mongo-express
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: flow-masters-mcp
    ports:
      - '3030:3030'
    depends_on:
      - payload
    environment:
      - PORT=3030
      - HOST=0.0.0.0
      - API_URL=http://payload:3000
      - API_KEY=your-api-key-here
    networks:
      - app-network
    restart: always
    # Model Context Protocol server for LLM integration with Flow Masters API

volumes:
  mongodb_data:
    driver: local
  node_modules:
    driver: local

networks:
  app-network:
    driver: bridge

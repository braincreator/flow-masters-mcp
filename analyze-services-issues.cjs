/**
 * –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ services –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ richText –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function analyzeRichTextContent(richText) {
  if (!richText || !richText.root || !richText.root.children) {
    return { length: 0, text: '' };
  }
  
  let text = '';
  function extractText(children) {
    for (const child of children) {
      if (child.type === 'text' && child.text) {
        text += child.text;
      } else if (child.children) {
        extractText(child.children);
      }
    }
  }
  
  extractText(richText.root.children);
  return { length: text.length, text: text.substring(0, 200) + '...' };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É—Å–ª—É–≥–∏
function analyzeService(service, index) {
  const title = typeof service.title === 'object' ? (service.title.ru || service.title.en) : service.title;
  
  console.log(`\nüîç –£—Å–ª—É–≥–∞ ${index + 1}: ${title}`);
  console.log(`   - –¢–∏–ø: ${service.serviceType}`);
  
  // –ê–Ω–∞–ª–∏–∑ features
  const hasFeatures = service.features && Object.keys(service.features).length > 0;
  const featuresCount = hasFeatures ? 
    (service.features.ru ? service.features.ru.length : 0) + 
    (service.features.en ? service.features.en.length : 0) : 0;
  
  console.log(`   - –ï—Å—Ç—å features: ${hasFeatures}`);
  console.log(`   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ features: ${featuresCount}`);
  
  // –ê–Ω–∞–ª–∏–∑ –æ–ø–∏—Å–∞–Ω–∏–π
  const descRu = service.description?.ru ? analyzeRichTextContent(service.description.ru) : { length: 0, text: '' };
  const shortDescRu = service.shortDescription?.ru || '';
  
  console.log(`   - Description –¥–ª–∏–Ω–∞: ${descRu.length} —Å–∏–º–≤–æ–ª–æ–≤`);
  console.log(`   - ShortDescription –¥–ª–∏–Ω–∞: ${shortDescRu.length} —Å–∏–º–≤–æ–ª–æ–≤`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
  const isSimilar = descRu.length > 0 && shortDescRu.length > 0 && 
                   descRu.text.substring(0, 50).toLowerCase().includes(shortDescRu.substring(0, 50).toLowerCase());
  
  console.log(`   - –û–ø–∏—Å–∞–Ω–∏—è –ø–æ—Ö–æ–∂–∏: ${isSimilar}`);
  
  // –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
  const issues = [];
  if (!hasFeatures) issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç features');
  if (featuresCount < 3) issues.push('–ú–∞–ª–æ features (< 3)');
  if (descRu.length < 200) issues.push('–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (< 200 —Å–∏–º–≤–æ–ª–æ–≤)');
  if (isSimilar) issues.push('–û–ø–∏—Å–∞–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è');
  
  if (issues.length > 0) {
    console.log(`   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã: ${issues.join(', ')}`);
  } else {
    console.log(`   ‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ —Ö–æ—Ä–æ—à–µ–µ`);
  }
  
  return {
    title,
    hasFeatures,
    featuresCount,
    descriptionLength: descRu.length,
    shortDescriptionLength: shortDescRu.length,
    hasSimilarDescriptions: isSimilar,
    issues: issues.length
  };
}

// –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–π (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
const sampleServices = [
  {
    title: { ru: "–≠–∫—Å–ø—Ä–µ—Å—Å-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ò–ò", en: "Express AI Consultation" },
    serviceType: "consultation",
    description: {
      ru: {
        root: {
          children: [{
            children: [{
              text: "–ó–∞ 30 –º–∏–Ω—É—Ç –æ–ø—Ä–µ–¥–µ–ª–∏–º –Ω–∞–∏–±–æ–ª–µ–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ –≤–∞—à–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã."
            }]
          }]
        }
      }
    },
    shortDescription: {
      ru: "–ë—ã—Å—Ç—Ä–∞—è 30-–º–∏–Ω—É—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –ò–ò —Å –≤—ã—è–≤–ª–µ–Ω–∏–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —Ç–æ—á–µ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"
    },
    features: {} // –ü—É—Å—Ç—ã–µ features - –ø—Ä–æ–±–ª–µ–º–∞!
  },
  {
    title: { ru: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ò–ò", en: "Standard AI Consultation" },
    serviceType: "consultation",
    description: {
      ru: {
        root: {
          children: [{
            children: [{
              text: "–£–≥–ª—É–±–ª–µ–Ω–Ω–∞—è 90-–º–∏–Ω—É—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ –≤–∞—à –±–∏–∑–Ω–µ—Å."
            }]
          }]
        }
      }
    },
    shortDescription: {
      ru: "–£–≥–ª—É–±–ª–µ–Ω–Ω–∞—è 90-–º–∏–Ω—É—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ø–ª–∞–Ω–æ–º –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –∑–∞–¥–∞–Ω–∏–µ–º"
    },
    features: {
      ru: [
        { name: "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞—É–¥–∏—Ç", description: "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤", included: true }
      ]
    } // –ú–∞–ª–æ features - –ø—Ä–æ–±–ª–µ–º–∞!
  }
];

console.log('üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Services');
console.log('=====================================');

const results = sampleServices.map(analyzeService);

// –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
console.log('\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
console.log(`   - –í—Å–µ–≥–æ —É—Å–ª—É–≥ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${results.length}`);
console.log(`   - –£—Å–ª—É–≥ –±–µ–∑ features: ${results.filter(r => !r.hasFeatures).length}`);
console.log(`   - –£—Å–ª—É–≥ —Å –º–∞–ª—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º features: ${results.filter(r => r.featuresCount < 3).length}`);
console.log(`   - –£—Å–ª—É–≥ —Å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏: ${results.filter(r => r.descriptionLength < 200).length}`);
console.log(`   - –£—Å–ª—É–≥ —Å –¥—É–±–ª–∏—Ä—É—é—â–∏–º–∏—Å—è –æ–ø–∏—Å–∞–Ω–∏—è–º–∏: ${results.filter(r => r.hasSimilarDescriptions).length}`);

console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('1. –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ features –¥–ª—è –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–∏ (–º–∏–Ω–∏–º—É–º 3-6 —à—Ç—É–∫)');
console.log('2. –†–∞—Å—à–∏—Ä–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏—è –¥–æ 300-500 —Å–∏–º–≤–æ–ª–æ–≤ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏');
console.log('3. –°–¥–µ–ª–∞—Ç—å description –∏ shortDescription —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é');
console.log('4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å —Å–ø–∏—Å–∫–∞–º–∏ –∏ –∞–±–∑–∞—Ü–∞–º–∏');

console.log('\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º:');
console.log('   - migrate-services-enhanced.cjs - –≥–æ—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏');
console.log('   - enhanced-services-data.json - –ø—Ä–∏–º–µ—Ä —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');
console.log('   - SERVICES_IMPROVEMENT_GUIDE.md - –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ');

console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ MongoDB: brew services start mongodb-community');
console.log('2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: node migrate-services-enhanced.cjs');
console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: http://localhost:3000/admin/collections/services');

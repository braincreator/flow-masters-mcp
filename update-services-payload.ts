/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥ —á–µ—Ä–µ–∑ Payload Local API
 */

import { getPayload } from 'payload'
import config from './src/payload.config'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è richText –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function createRichText(text: string) {
  return {
    root: {
      type: "root",
      children: [{
        type: "paragraph",
        version: 1,
        children: [{
          type: "text",
          version: 1,
          text: text
        }]
      }],
      direction: null,
      format: "",
      indent: 0,
      version: 1
    }
  };
}

// –£–ª—É—á—à–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—Å–ª—É–≥
const serviceUpdates = [
  {
    searchTitle: "–≠–∫—Å–ø—Ä–µ—Å—Å-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ò–ò",
    updates: {
      description: {
        ru: createRichText(`–ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ –≤–∞—à –±–∏–∑–Ω–µ—Å –≤—Å–µ–≥–æ –∑–∞ 30 –º–∏–Ω—É—Ç. 

–ù–∞—à —ç–∫—Å–ø–µ—Ä—Ç –ø—Ä–æ–≤–µ–¥–µ—Ç —ç–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –≤—ã—è–≤–∏—Ç –Ω–∞–∏–±–æ–ª–µ–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ—á–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç —á–µ—Ç–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò.

–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
‚Ä¢ –°–ø–∏—Å–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò
‚Ä¢ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É ROI –æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–∞–º
‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ–± –ò–ò

–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –ò–ò –∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –æ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é.`),
        en: createRichText(`Get a professional assessment of AI implementation potential for your business in just 30 minutes.

Our expert will conduct an express analysis of your business processes, identify the most promising automation points, and provide clear recommendations on AI implementation priorities.

As a result of the consultation, you will receive:
‚Ä¢ Analysis of current processes from an automation perspective
‚Ä¢ List of priority areas for AI implementation
‚Ä¢ Preliminary ROI assessment from automation
‚Ä¢ Recommendations for next steps
‚Ä¢ Answers to all your AI questions

Perfect for initial familiarization with AI capabilities and making decisions about further automation investments.`)
      },
      features: {
        ru: [
          {
            name: "–≠–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
            description: "–ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞ —Ç–µ–∫—É—â–∏—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
            included: true
          },
          {
            name: "–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π",
            description: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò",
            included: true
          },
          {
            name: "ROI-–æ—Ü–µ–Ω–∫–∞",
            description: "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
            included: true
          },
          {
            name: "–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",
            description: "–ö—Ä–∞—Ç–∫–∏–π –ø–ª–∞–Ω —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤ –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò–ò",
            included: true
          },
          {
            name: "Q&A —Å–µ—Å—Å–∏—è",
            description: "–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ–± –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–µ",
            included: true
          }
        ],
        en: [
          {
            name: "Express Process Analysis",
            description: "Quick assessment of current business processes for automation potential",
            included: true
          },
          {
            name: "Direction Prioritization",
            description: "Identification of the most promising areas for AI implementation",
            included: true
          },
          {
            name: "ROI Assessment",
            description: "Preliminary calculation of return on investment from automation",
            included: true
          },
          {
            name: "Roadmap",
            description: "Brief plan of next steps for AI implementation",
            included: true
          },
          {
            name: "Q&A Session",
            description: "Answers to all your questions about artificial intelligence",
            included: true
          }
        ]
      }
    }
  }
];

async function updateServices() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥ —á–µ—Ä–µ–∑ Payload API...');
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Payload
    const payload = await getPayload({ config });
    console.log('‚úÖ Payload –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É—Å–ª—É–≥–∏
    const existingServices = await payload.find({
      collection: 'services',
      limit: 1000
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥: ${existingServices.totalDocs}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —É—Å–ª—É–≥–∏
    for (const serviceUpdate of serviceUpdates) {
      const service = existingServices.docs.find(s => 
        (typeof s.title === 'object' && s.title.ru === serviceUpdate.searchTitle) ||
        s.title === serviceUpdate.searchTitle
      );
      
      if (service) {
        try {
          await payload.update({
            collection: 'services',
            id: service.id,
            data: serviceUpdate.updates
          });
          
          console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ª—É–≥–∞: ${serviceUpdate.searchTitle}`);
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∏ ${serviceUpdate.searchTitle}:`, error.message);
        }
      } else {
        console.log(`‚ö†Ô∏è –£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${serviceUpdate.searchTitle}`);
      }
    }
    
    console.log('\nüéØ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: http://localhost:3000/admin/collections/services');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateServices();
